[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "jsPsychR manual",
    "section": "",
    "text": "What is jsPsychR?\njsPsychR is a group of open source tools to help create experimental paradigms with jsPsych, simulate participants and standardize the data preparation and analysis. The final goal is to help you have the data preparation and analysis ready before collecting any real data, drastically reducing errors in your protocols, and making the move towards registered reports easier.\nWe have three main tools:\nAnd a package for the system admins:",
    "crumbs": [
      "What is jsPsychR?"
    ]
  },
  {
    "objectID": "index.html#everything-in-3-minutes",
    "href": "index.html#everything-in-3-minutes",
    "title": "jsPsychR manual",
    "section": "Everything in 3 minutes",
    "text": "Everything in 3 minutes\njsPsychR creating a protocol with 3 tasks, running 10 simulated participants, and finally, data preparation… The whole process takes 3 minutes.\n\n\nContributors\n\nGorka Navarrete\nHerman Valencia",
    "crumbs": [
      "What is jsPsychR?"
    ]
  },
  {
    "objectID": "index.html#citing-jspsychr",
    "href": "index.html#citing-jspsychr",
    "title": "jsPsychR manual",
    "section": "Citing jsPsychR",
    "text": "Citing jsPsychR\nIf you use the jsPsychR tools for your research, you can cite us with:\n\nNavarrete G, Valencia H (2023). “Create experimental paradigms with jsPsych, simulate participants and standardize the data preparation and analysis.”, 173. doi:10.5281/zenodo.8296995",
    "crumbs": [
      "What is jsPsychR?"
    ]
  },
  {
    "objectID": "index.html#papers-published-using-jspsychr",
    "href": "index.html#papers-published-using-jspsychr",
    "title": "jsPsychR manual",
    "section": "Papers published using jsPsychR",
    "text": "Papers published using jsPsychR\nSo far, the following papers using jsPsychR have been published or submitted:\n\nNeely-Prado, A., van Elk, M., Navarrete, G., Hola, F., & Huepe, D. (2021). Social Adaptation in Context: The Differential Role of Religiosity and Self-Esteem in Vulnerable vs. Non-vulnerable Populations–A Registered Report Study. Frontiers in Psychology, 12, 5257. https://doi.org/10.3389/fpsyg.2021.519623\nJuan-Pablo Morales, Brenda E. Ryan, Vince Polito, Gorka Navarrete, Mayte Vergara, David Huepe. (Submitted). Can beliefs improve mental health? A dive into resilience during pandemic times in South America",
    "crumbs": [
      "What is jsPsychR?"
    ]
  },
  {
    "objectID": "qmd/01-intro.html#open-and-reproducible-pipeline",
    "href": "qmd/01-intro.html#open-and-reproducible-pipeline",
    "title": "1  Reproducible experiments",
    "section": "1.1 Open and reproducible pipeline",
    "text": "1.1 Open and reproducible pipeline\nTo replicate an experimental protocol from a publication is not trivial. Obels et al. (2020) checked the computational reproducibility of Registered Reports in Psychology. From 62 articles meeting the inclusion criteria, only 21 had both data and code, and could be computationally reproduced. One of the main goals of jsPsychR is to be able to create, share and reproduce an experiment, its data, and data preparation and analysis without any extra effort. If recent calls for Journals to assess computational reproducibility are successful (Lindsay 2023), this should be an unavoidable aspect of researcher’s work soon enough.\nFurthermore, all the components of the pipeline are be Open Source, which allows reviewers, collaborators, etc. to check and run the code. This also makes it accessible to anyone with a computer connected to the internet, eliminating cost constrains.\nWith this system you can create a paradigm, simulate data and prepare data and analysis almost automatically.\nThe system output is standardized, so names of variables and the structure of the data are predictable. Finally, the plots, tables, reports and analysis are reproducible, so you can get everything ready with simulated data, preregister or even better, go for a registered report and just relaunch the data preparation and analysis when the participant’s responses arrive, with a single command.\nAnd if you want to share the final data preparation and analysis project in a Docker container to make sure the future generations will be able to run it without dependency issues, we got you covered.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reproducible experiments</span>"
    ]
  },
  {
    "objectID": "qmd/01-intro.html#automatization",
    "href": "qmd/01-intro.html#automatization",
    "title": "1  Reproducible experiments",
    "section": "1.2 Automatization",
    "text": "1.2 Automatization\nWe tried to get a few basic things right, but this is an evolving project, and some things are more complex than one would want. Please do report the issues you find:\n\njsPsychMaker issues\njsPsychMonkeys issues\njsPsychHelpeR issues\n\n\n\n\n\n\nSOURCE: https://xkcd.com/1425/\n\n\n\n\n\n\n\n\nLindsay, D. Stephen. 2023. “A Plea to Psychology Professional Societies That Publish Journals: Assess Computational Reproducibility.” Meta-Psychology 7 (September). https://doi.org/10.15626/MP.2023.4020.\n\n\nObels, Pepijn, Daniël Lakens, Nicholas A Coles, Jaroslav Gottfried, and Seth A Green. 2020. “Analysis of Open Data and Computational Reproducibility in Registered Reports in Psychology.” Advances in Methods and Practices in Psychological Science 3 (2). https://doi.org/10.1177/2515245920918872.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Reproducible experiments</span>"
    ]
  },
  {
    "objectID": "qmd/02-QuickGuide.html#QuickGuidejsPsychMaker",
    "href": "qmd/02-QuickGuide.html#QuickGuidejsPsychMaker",
    "title": "2  Quick Guide",
    "section": "2.1 jsPsychMaker: Create an experimental protocol",
    "text": "2.1 jsPsychMaker: Create an experimental protocol\n\nSee the jsPsychMaker chapter for more detailed instructions.\n\n\n\n\n\n\n\nOutline\n\n\n\n\nInstall jsPsychMaker\ncreate_protocol() using any of the list_available_tasks() or your own tasks defined in csv/xls files, and edit the config.js to adapt the protocol settings\nOpen index.html in your browser\n\n\n\n\n\n1) Install jsPsychMaker\nOpen RStudio and run the following line in the console. This will install the jsPsychMaker package from the Github repository.\n\nif (!require('pak')) utils::install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychMaker\")\n\n# If you are on Ubuntu and you get an igraph error, try: sudo apt install build-essential gfortran\n\n\n\n2) Create protocol\nCreate and test a fully working protocol with jsPsychMaker::create_protocol().\nInclude the canonical_tasks you want (list the available tasks with jsPsychMaker::list_available_tasks()). You have more details in available-tasks. If you need new tasks, see New tasks.\n\n  jsPsychMaker::create_protocol(canonical_tasks = c(\"AIM\", \"EAR\", \"IRI\"),\n                                folder_output = \"~/Downloads/protocol999\", \n                                launch_browser = TRUE)\n\nYou must edit config.js to adapt the protocol to your needs. See experiment configuration for more details.\n\n\n3) Run experiment\nThe experiment is ready to run on your computer. Open index.html in Google Chrome or your favorite (and up to date) browser.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quick Guide</span>"
    ]
  },
  {
    "objectID": "qmd/02-QuickGuide.html#QuickGuidejsPsychMonkeys",
    "href": "qmd/02-QuickGuide.html#QuickGuidejsPsychMonkeys",
    "title": "2  Quick Guide",
    "section": "2.2 jsPsychMonkeys: Simulate participants",
    "text": "2.2 jsPsychMonkeys: Simulate participants\n\nSee the jsPsychMonkeys chapter for more detailed instructions.\n\njsPsychMonkeys uses Selenium inside a Docker container to guarantee each session is a clean session. See how to setup your computer.\n\n\n\n\n\n\n\nOutline\n\n\n\n\nInstall jsPsychMonkeys and Docker\nRun Monkeys\n\n\n\n\n\n1) Install jsPsychMonkeys and Docker\n\nif (!require('pak')) utils::install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychMonkeys\")\n\n# If you are on Ubuntu and you get an igraph error, try: sudo apt install build-essential gfortran\n\nGo to Docker Desktop and install it.\n\n\n2) Run Monkeys\nIf you are on Windows, make sure Docker Desktop is open and running before releasing the monkeys.\nUse the uid parameter to set the participants’ numeric id’s, e.g. uid = 1:10 would launch monkeys 1 to 10.\nUse the local_folder_tasks parameter to indicate the location of the jsPsychMakeR protocol. If you are on Windows, local_folder_tasks value should be something similar to C:/Users/myusername/Downloads/protocol999.\n\njsPsychMonkeys::release_the_monkeys(uid = 1:10, \n                                    local_folder_tasks = \"~/Downloads/protocol999/\")\n\nIf the protocol was running from a local folder, the Monkey’s responses will be copied to a subfolder .data/ inside the local_folder_tasks. In the example above, ~/Downloads/protocol999/.data. If the protocol was running on the server (see the server_folder_tasks parameter), the data will be in the protocols’ .data/ folder inside the server.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quick Guide</span>"
    ]
  },
  {
    "objectID": "qmd/02-QuickGuide.html#QuickGuidejsPsychHelpeR",
    "href": "qmd/02-QuickGuide.html#QuickGuidejsPsychHelpeR",
    "title": "2  Quick Guide",
    "section": "2.3 jsPsychHelpeR: Prepare data",
    "text": "2.3 jsPsychHelpeR: Prepare data\n\nSee the jsPsychHelpeR chapter for more detailed instructions.\n\n\n\n\n\n\n\nOutline\n\n\n\n\nInstall jsPsychHelpeR\nCreate new project\nRun data preparation\n\n\n\n\n\n1) Install jsPsychHelpeR\n\nInstall jsPsychHelpeR from Github.\n\n\nif (!require('pak')) utils::install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychHelpeR\")\n\n# If you are on Ubuntu and you get an igraph error, try: sudo apt install build-essential gfortran\n\n\n\n2) Create new project\nCreate and setup a new RStudio project for your data. Before doing this, you need to locate the raw data for the jsPsychMaker project.\nIn this example, our raw data is in ~/Downloads/protocol999/.data/ and we want the new data preparation project to be in ~/Downloads/jsPsychHelpeR999/\n\njsPsychHelpeR::run_initial_setup(pid = '999', \n                                 data_location = '~/Downloads/protocol999/.data/', \n                                 folder = '~/Downloads/jsPsychHelpeR999/')\n\nAfter this, a new RStudio project will open.\n\n\n3) Run data preparation\nRun the data preparation in the new RStudio project with targets::tar_make()\n\n# Restore all the necessary packages using renv\nrenv::restore(prompt = FALSE)\n\n# Run data preparation\ntargets::tar_make()\n\nIf you are curious, running targets::tar_visnetwork(targets_only = TRUE) will show the whole data preparation targets tree. Open the file run.R for more details.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Quick Guide</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#available-tasks",
    "href": "qmd/03-jsPsychMaker.html#available-tasks",
    "title": "3  jsPsychMaker",
    "section": "3.1 Available tasks",
    "text": "3.1 Available tasks\nIn 2023-12-04 we have 68 tasks implemented, and 20 in development. The full details about the available tasks can be checked in this document. You can always check the full list of tasks in the Github repo.\nTo list the available tasks in the jsPsychMaker R package in you console, you can use the list_available_tasks() function. If you don’t have the jsPsychMaker package, install it first.\n\njsPsychMaker::list_available_tasks()$tasks\n\n [1] \"AIM\"                 \"AntiBots\"            \"Bank\"               \n [4] \"BART\"                \"BDI\"                 \"BNT\"                \n [7] \"bRCOPE\"              \"CAS\"                 \"CEL\"                \n[10] \"CIT\"                 \"CMApost\"             \"CMApre\"             \n[13] \"Consent\"             \"ConsentAudio\"        \"ConsentHTML\"        \n[16] \"Cov19Q\"              \"COVIDCONTROL\"        \"CRQ\"                \n[19] \"CRS\"                 \"CRT7\"                \"CRTMCQ4\"            \n[22] \"CRTv\"                \"CS\"                  \"CTT\"                \n[25] \"DASS21\"              \"DEBRIEF\"             \"DEMOGR\"             \n[28] \"DMW\"                 \"EAR\"                 \"EmpaTom\"            \n[31] \"EQ\"                  \"ERQ\"                 \"ESM\"                \n[34] \"ESV\"                 \"ESZ\"                 \"fauxPasEv\"          \n[37] \"FDMQ\"                \"FKEA\"                \"GBS\"                \n[40] \"GHQ12\"               \"Goodbye\"             \"HRPVB\"              \n[43] \"HRPVBpost\"           \"IBT\"                 \"ICvsID\"             \n[46] \"IDQ\"                 \"IEC\"                 \"INFCONS\"            \n[49] \"IRI\"                 \"IRS\"                 \"LoB\"                \n[52] \"LOT\"                 \"LSNS\"                \"MCQ30\"              \n[55] \"MDDF\"                \"MDMQ\"                \"MIS\"                \n[58] \"NARS\"                \"OBJNUM\"              \"OTRASRELIG\"         \n[61] \"PBSr\"                \"PERMA\"               \"PPD\"                \n[64] \"PRFBM\"               \"PRFBMpost\"           \"PSC\"                \n[67] \"PSETPP\"              \"PSPPC\"               \"PSS\"                \n[70] \"PVC\"                 \"PWb\"                 \"REI40\"              \n[73] \"Report\"              \"RMET\"                \"RobToM\"             \n[76] \"RSS\"                 \"RTS\"                 \"SASS\"               \n[79] \"SBS\"                 \"SCGT\"                \"SCSORF\"             \n[82] \"SDG\"                 \"SILS\"                \"sProQOL\"            \n[85] \"SRA\"                 \"SRBQP\"               \"SRSav\"              \n[88] \"STAI\"                \"SWBQ\"                \"UCLA\"               \n[91] \"WaisMatricesES\"      \"WaisWorkingMemoryES\" \"WEBEXEC\"            \n\n\nIf you need help creating a NEW task, see the section help creating a new task.\n\nBelow, a table with an overview of the available tasks in the Google Sheet. If a task is here but not in the R package, you can open an issue to let us know.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#experiment-configuration",
    "href": "qmd/03-jsPsychMaker.html#experiment-configuration",
    "title": "3  jsPsychMaker",
    "section": "3.2 Experiment configuration",
    "text": "3.2 Experiment configuration\nIn the config.js file you can find the main parameters to control how your experiment works.\nYou can edit the config file in one of the following two ways:\n\nGo to folder_output and edit config.js.\nUse the jsPsychMaker_config Shiny APP and copy the generated config.js file in the folder_output folder.\n\nIf you use the app, you will need to copy the generated config.js file to your protocol folder. The Shiny app can also help you create a parametrized consent form (see the Consent tab).\n\n3.2.1 Main parameters\n\npid = 999;: Number of protocol\nonline = true;: true if the protocol runs in a server, false if it runs locally\nmax_participants = 3;: If you have between participants conditions (participants are assigned to only one of a number of conditions), this is the max number of participants per condition\nrandom_id = false;: true if you want to assign a random id to participants, false if the participant needs to input an id\nmax_time = \"24:00:00\";: Maximum time to complete the protocol (HH:MM:SS; Hours:Minutes:Seconds)\naccept_discarded = true;: If a participant is discarded (i.e. exceeded the max_time), should we allow them to continue, given there are available slots?\ndebug_mode = false;: When testing the protocol:\nshows DEBUG messages\ncreates the DB tables if they don’t exist\nAvoids randomization (e.g. order of items) so the jsPsychMonkeys can have a reproducible behavior\nlanguage = \"English\"; Language to use for the protocol. Either Spanish or English\n\n\n\n3.2.2 Order of tasks\n\nfirst_tasks = ['Consent'];//  The protocol will start with these tasks in sequential order\nlast_tasks = ['Goodbye'];//  Last block of tasks presented (in sequential order)\n\nCreate as many blocks as needed:\n\nrandomly_ordered_tasks_1 = ['TASK1', 'TASK2']; //  Block of tasks in random order\nrandomly_ordered_tasks_2 = ['TASK3']; //  Block of tasks in random order\nsecuentially_ordered_tasks_1 = ['TASK5', 'TASK4']; // Block of tasks in sequential order\n\nThe final array of tasks can be build combining the above blocks. The order of the tasks in the arrays starting with “random” will be randomized.\n\ntasks = ['first_tasks', \n         'randomly_ordered_tasks_1', \n         'secuentially_ordered_tasks_1', \n         'randomly_ordered_tasks_2', \n         'last_tasks'];\n\n\n\n3.2.3 Between-subject tasks\nThe variable all_conditions in config.js let’s you define the Independent Variables (IV) and levels for the between-subject tasks:\nIf there is no between-subject task:\n\nall_conditions = {\"protocol\": {\"type\": [\"survey\"]}};\n\nIf there are between-subject tasks:\n\nall_conditions = {\"NAMETASK\": {\"name_IV\": [\"name_level1\", \"name_level2\"]}};\n\njsPsychR will randomize participants to the different conditions keeping the unbalance between conditions to the minimum possible.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#online-offline-protocols",
    "href": "qmd/03-jsPsychMaker.html#online-offline-protocols",
    "title": "3  jsPsychMaker",
    "section": "3.3 online-offline protocols",
    "text": "3.3 online-offline protocols\njsPsych uses standard web technologies (HTML, CSS y Javascript), so that protocols should run in any modern browser (updated, please). We recommend Google Chrome just because our test suite runs with Google Chrome, so we will catch its specific issues earlier.\n\n3.3.1 Offline\nIf you want to run a protocol locally (on your computer, on a lab computer), you need to:\n\nset online = false; in the config.js file\ndouble click index.html\n\njsPsychR will use IndexedDB to store the participants’ progress and balance between conditions. The output csv files will be Downloaded to the Download folder of the computer where the protocol runs.\n\n3.3.1.1 CORS ERRORS\nIf any of the tasks imports an html file, the Offline protocol will give a CORS error.\nThere are ways to disable web security in your browser, but it MUST only be done if your experiment computer runs offline, otherwise you will be exposed to very bad things.\nSee how to run chrome disabling web security to avoid CORS error:\n\ngoogle-chrome --disable-web-security --user-data-dir=\"~/\"\n\n\n\n\n3.3.2 Online\nTu run a protocol online, set online = true; in the config.js file. You will need a couple more things:\n\nMySQL running in your server\n\nA file .secrets_mysql.php with the content below\n\nDefine the route to .secrets_mysql.php in controllers/php/mysql.php\n\nrequire_once '../../.secrets_mysql.php';\n\nTHIS FILE MUST NOT BE PUBLICLY VISIBLE FROM THE BROWSER\n\n\nUpload the files to the server :)\n\n\n&lt;?php\n\n/* DO NOT UPLOAD TO PUBLIC REPO */\n\n  $servername = \"127.0.0.1\";\n  $username = \"USERNAME OF THE DATABASE\";\n  $password = \"PASSWORD OF THE DATABASE\";\n  $dbname = \"NAME OF THE DB\";\n  \n?&gt;\n\njsPsychR will use MySQL to store the participants’ progress and balance between conditions. The output csv files will be Downloaded in the .data/ folder inside the protocol folder in the server.\nBefore launching the final experiment, make sure you start with a clean slate! That can be summarized in 3 simple steps:\n\nCheck the configuration for you experiment (config.js) and make sure all is well. Some of the critical bits are:\n\n\npid = 999; // SHOULD have your project ID!\nonline = true; // true is good\nmax_participants = 100; // Max participants per contition [number]\nmax_time = \"24:00:00\"; // Max time to complete the protocol [HH:MM:SS]\ndebug_mode = false; // SHOULD be false\n\n\nCheck that the .data/ folder for your protocol is empty in the server. You will likely have remains of the piloting and Monkeys.\nClean up the MySQL data associated to your protocol.\n\n\nSET @PID = 999; // HERE YOUR PROTOCOL ID!\n\ndelete from experimental_condition where id_protocol=@PID;\ndelete from user where id_protocol=@PID;\ndelete from user_condition where id_protocol=@PID;\ndelete from user_task where id_protocol=@PID;\ndelete from task where id_protocol=@PID;\ndelete from protocol where id_protocol=@PID;\n\nYou will most likely need help from the server admin to perform these steps.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#language",
    "href": "qmd/03-jsPsychMaker.html#language",
    "title": "3  jsPsychMaker",
    "section": "3.4 Language",
    "text": "3.4 Language\nWe started implementing the basic blocks to be able to switch a protocol’s language from Spanish to English with the parameter language in the config.js file.\nThis will change the protocol’s hardwired messages (see config_messages.js), and will use the desired version of the task, if available. So far we only prepared a handful of tasks in multiple languages.\nAn example of a multilingual task would be Consent.js.\nWe have a Translations block:\n\n\n// Translations --------------------------------------------------------------\n\nswitch (language) {\n\n  case \"Spanish\":\n\n    Consent_000 = ['&lt;p&gt;&lt;left&gt;&lt;b&gt;&lt;big&gt;Consentimiento informado&lt;/big&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;'];\n    Consent_001_choices = ['acepto participar', 'rechazo participar'];\n    Consent_001_end = 'Gracias por tu tiempo. Puedes cerrar esta página.';\n    break;\n\n  case \"English\":\n\n    Consent_000 = ['&lt;p&gt;&lt;left&gt;&lt;b&gt;&lt;big&gt;Informed consent&lt;/big&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;'];\n    Consent_001_choices = ['I agree to participate', 'I reject to participate'];\n    Consent_001_end = 'Thanks for your time. You can close this page.';\n    break;\n\n}\n\n\nAnd then a Task block, where the logic of the experiment is unique, and we use the variables created in the Translation block for the things the users will see in their screens:\n\n\n// Task -----------------------------------------------------------------------\n\nquestions = ( typeof questions != 'undefined' && questions instanceof Array ) ? questions : [];\nquestions.push( check_fullscreen('Consent') );\nConsent = [];    //temporal timeline\n\n\nvar instruction_screen_experiment = {\n    type: 'instructions',\n    pages: Consent_000,\n    data: {trialid: 'Consent_000', procedure: 'Consent'},\n    show_clickable_nav: true,\n    on_trial_start: function(){\n        bloquear_enter = 0;\n    }\n};\n\n\n// Reads consent from media/consent/consent-placeholder.js\nvar question01 = {\n  type: 'html-button-response',\n  stimulus: intro_CONSENT,\n  choices: Consent_001_choices,\n  prompt: \"&lt;BR&gt;&lt;BR&gt;\",\n  // If 'rechazo participar' is pressed, end experiment\n  on_finish: function(data){\n    if(jsPsych.data.get().values().find(x =&gt; x.trialid === 'Consent_001').button_pressed == 1){\n      jsPsych.endExperiment(Consent_001_end);\n    }\n  },\n    data: {\n    trialid: 'Consent_001',\n    procedure: 'Consent'\n   }\n};\nConsent.push(question01);\n\n\nConsent.unshift(instruction_screen_experiment);\nConsent.push.apply(questions, Consent);\ncall_function(\"Consent\");",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#need-help-implementing-a-task",
    "href": "qmd/03-jsPsychMaker.html#need-help-implementing-a-task",
    "title": "3  jsPsychMaker",
    "section": "3.5 Need help implementing a task!",
    "text": "3.5 Need help implementing a task!\nIf you need help creating a NEW task, see the section help creating a new task.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#developing-tasks",
    "href": "qmd/03-jsPsychMaker.html#developing-tasks",
    "title": "3  jsPsychMaker",
    "section": "3.6 Developing tasks",
    "text": "3.6 Developing tasks\nRemember to place an if (debug_mode === false) before the randomization of the item order so when running in debug_mode, the items are not randomized. This is important so the behaviour of the jsPsychMonkeys is reproducible:\n\nif (debug_mode === false) NAMETASK = jsPsych.randomization.repeat(NAMETASK,1);",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#technical-aspects",
    "href": "qmd/03-jsPsychMaker.html#technical-aspects",
    "title": "3  jsPsychMaker",
    "section": "3.7 Technical aspects",
    "text": "3.7 Technical aspects\nWe currently use jsPsych 6.3 as the default, and started to implement the last stable jsPsych (7.3) recently. To choose a version for the protocols you create, use the parameter jsPsych_version. For example, jsPsych_version = 7. Things are not fully tested in the v7 so, use with care.\nThere is a migration guide and a Github issue with migration questions.\n\n3.7.1 Misc\nWhen index.html is launched:\n\nChecks if there are available slots\n\nWhen an uid is assigned:\n\nquestions array is created\nbetween-participants conditions are assigned and stored in the DB (MySQL if online, IndexedDB if offline)\n\nEach question, timeline or conditional question needs to have a:\n\ndata: {trialid: 'NameTask_001', procedure: 'NameTask'}\n\nThe trialid identifies the trial, and the procedure makes possible to find that trial so participants can continue the tasks where they left, know when participants finished the tasks, etc. This is done in MySQL if online, IndexedDB if offline.\ntrialid’s need to have a standardized structure, which generally conforms with NameTask_3DigitNumber. When using conditional items the structure can be a bit more complex, but not much. We use the following rules to check for non-complying trialid’s:\n^[a-zA-Z0-9]{1,100}_[0-9]{2,3}$ -&gt; `NameTask_2or3DigitNumber`, for example `BNT_001`  \n^[a-zA-Z0-9]{1,100}_[0-9]{2,3}_[0-9]{1,3}$ -&gt; `NameTask_2or3DigitNumber_1to3DigitsSuffix`, for example `BNT_002_1`  \n^[a-zA-Z0-9]{1,100}_[0-9]{2,3}_if$ -&gt; `NameTask_2or3DigitNumber`, for example `BNT_002_if`  \n^[a-zA-Z0-9]{1,100}_[0-9]{2,3}_[0-9]{1,3}_if$  -&gt; `NameTask_2or3DigitNumber`, for example `BNT_002_1_if`  \n\n\n3.7.2 jsPsychMaker main changes on a task\n\nStart of a task\n\n\nquestions = ( typeof questions != 'undefined' && questions instanceof Array ) ? questions : [];\nquestions.push( check_fullscreen('NameOfTask') );\nNameOfTask = [];\n\n\nEach item\n\n\ndata: {trialid: 'NameOfTask_01', procedure: 'NameOfTask'}\n\n\nEnd of experiment\n\n\nif (debug_mode == 'false') NameOfTask = jsPsych.randomization.repeat(NameOfTask, 1);\nNameOfTask.unshift(instruction_screen_experiment);\nquestions.push.apply(questions, NameOfTask)\n\nquestions.push({\n    type: 'call-function',\n    data: {trialid: 'NameOfTask_000', procedure: 'NameOfTask'},\n    func: function(){\n      if (online) {\n        var data = jsPsych.data.get().filter({procedure: 'NameOfTask'}).csv();\n      } else {\n        var data = jsPsych.data.get().filter({procedure: 'NameOfTask'}).json();\n      }\n      saveData(data, online, 'NameOfTask');\n    }\n});\n\n\n\n3.7.3 Conditional questions\n\nvar question001 = {\n  type: 'survey-multi-choice-vertical',\n  questions: [{prompt: '&lt;div class=\"justified\"&gt;¿Usted se ha vacunado contra el coronavirus / covid-19?&lt;/div&gt;', options: ['&nbsp;Si', '&nbsp;No'], required: true,  random_options: false, horizontal: false}],\n  data: {trialid: 'PVC_001', procedure: 'PVC'}\n};\nPVC.push(question001);\n\nvar question001_1 = {\n  type: 'survey-multi-choice-vertical',\n  questions: [{prompt: '&lt;div class=\"justified\"&gt;¿Usted se va a vacunar contra el coronavirus covid-19?&lt;/div&gt;', options: ['&nbsp;Si', '&nbsp;No', '&nbsp;No estoy seguro'], required: true,  random_options: false, horizontal: false}],\n  data: {trialid: 'PVC_001_1', procedure: 'PVC'}\n};\n\nvar if_question001_1 = {\n  timeline: [question001_1],\n  data: {trialid: 'PVC_001_1_if', procedure: 'PVC'},\n  conditional_function: function(){\n    let data = (JSON.parse((jsPsych.data.get().values().find(x =&gt; x.trialid === 'PVC_001'))['response'])['Q0']).trim();\n    if((data) ==  'No'){\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nPVC.push(if_question001_1);",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/03-jsPsychMaker.html#common-errors",
    "href": "qmd/03-jsPsychMaker.html#common-errors",
    "title": "3  jsPsychMaker",
    "section": "3.8 Common ERRORS",
    "text": "3.8 Common ERRORS\nIf you get the following error in the console: Uncaught TypeError: Cannot read properties of undefined (reading 'procedure')\nRun this in the console:\n\nfor (var i = 0; i &lt; questions.length; i++) {\n  console.log(i + questions[i].data[\"procedure\"])\n}\n\nIt will stop in one of the items. Go to the console, check the array questions and go to the number that failed.\nWhen you know the task and item that fails, you probably need to add:\n\n`data: {trialid: 'TASKNAME_ITEMNUMBER', procedure: 'TASKNAME'}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>jsPsychMaker</span>"
    ]
  },
  {
    "objectID": "qmd/04-jsPsychMonkeys.html#how-to-simulate-participants",
    "href": "qmd/04-jsPsychMonkeys.html#how-to-simulate-participants",
    "title": "4  jsPsychMonkeys",
    "section": "4.1 How to simulate participants",
    "text": "4.1 How to simulate participants\nIf you are on Windows, make sure Docker Desktop is open and running before releasing the monkeys.\nTo run a monkey locally:\n\njsPsychMonkeys::release_the_monkeys(uid = 1, \n                                    local_folder_tasks = \"~/Downloads/protocol999/\")\n\nTo run a monkey on a server:\n\njsPsychMonkeys::release_the_monkeys(uid = 1, \n                                    server_folder_tasks = \"999\", \n                                    credentials_folder = \"~/.vault/\")\n\ncredentials_folder must contain SERVER_PATH.R and .credentials. See below for the expected content of those files.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>jsPsychMonkeys</span>"
    ]
  },
  {
    "objectID": "qmd/04-jsPsychMonkeys.html#parameters-available",
    "href": "qmd/04-jsPsychMonkeys.html#parameters-available",
    "title": "4  jsPsychMonkeys",
    "section": "4.2 Parameters available",
    "text": "4.2 Parameters available\nThere are a few parameters for jsPsychMonkeys::release_the_monkeys() that can be useful:\n\nuid_URL = TRUE: The uid is passed in the URL (e.g. &uid=1)\nlocal_folder_tasks = rep(\"Downloads/tests/test_prototol\", 25): Passing a vector of multiple protocols will make the Monkeys to complete all of them.\ntimes_repeat_protocol: How many times a monkey should complete the same protocol (useful for longitudinal protocols or to speed up things)\ntime_to_sleep_before_repeating_protocol: How many seconds to wait before reattempting to complete the protocol\nkeep_alive = TRUE Keep the docker container alive after completing the tasks\nDEBUG = TRUE Activate DEBUG mode. Lot’s of stuff will show up in the console.\nopen_VNC = TRUE Activate DEBUG mode and open a VNC container to see the Monkeys’ progress.\nscreenshot = TRUE The Monkeys will take a picture of all the pages they see. The .png files are stored in outputs/screenshots\ndebug_file = TRUE Activate DEBUG mode and store all the console output in the outputs/log\nbig_container = TRUE Sets the Shared memory size (/dev/shm) to 2 gigabytes. This is useful to avoid long/complex protocols to crash\ndisable_web_security = TRUE If you are running a local protocol that loads external files (e.g. consent form in a html file), you may need this. Only works with Google Chrome.\nconsole_logs = TRUE Store the browser’s console logs. Only works with Google Chrome\nforced_random_wait = TRUE Will wait a randomly sampled number of seconds on page 4\nforced_seed = 11 Set a random seed so the Monkeys’ behavior will be fully reproducible\nforced_refresh = 20 Refresh browser in page 20 (if TRUE is given, it will refresh in a randomly sampled page)\nsequential_parallel Choose between sequential, the default, or parallel\nnumber_of_cores Number of cores for parallel monkeys. The default is half of the available cores\n\n\n4.2.1 Parameters details\n\nlocal_folder_tasks: If the folder is not accessible to Docker (anything outside the Download folder), jsPsychMonkeys will create a copy of the protocol in Downloads/JSPSYCH/",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>jsPsychMonkeys</span>"
    ]
  },
  {
    "objectID": "qmd/04-jsPsychMonkeys.html#release-a-horde-of-monkeys",
    "href": "qmd/04-jsPsychMonkeys.html#release-a-horde-of-monkeys",
    "title": "4  jsPsychMonkeys",
    "section": "4.3 Release a horde of Monkeys!",
    "text": "4.3 Release a horde of Monkeys!\nIf you want a horde of Monkeys, you can set up sequential_parallel = \"parallel\" and choose how many monkeys will run in parallel with number_of_cores:\n\njsPsychMonkeys::release_the_monkeys(uid = \"1\", \n                                    local_folder_tasks = \"~/Downloads/protocol999/\",\n                                    sequential_parallel = \"parallel\",\n                                    number_of_cores = 4)  \n\n\n10 Monkeys completing a protocol in parallel:",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>jsPsychMonkeys</span>"
    ]
  },
  {
    "objectID": "qmd/04-jsPsychMonkeys.html#issues",
    "href": "qmd/04-jsPsychMonkeys.html#issues",
    "title": "4  jsPsychMonkeys",
    "section": "4.4 Issues",
    "text": "4.4 Issues\nIf the setup configuration steps didn’t work… You may need to do one of the things below:\n\nSwitch to Ubuntu :-)\nRun participants manually",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>jsPsychMonkeys</span>"
    ]
  },
  {
    "objectID": "qmd/04-jsPsychMonkeys.html#technical-aspects",
    "href": "qmd/04-jsPsychMonkeys.html#technical-aspects",
    "title": "4  jsPsychMonkeys",
    "section": "4.5 Technical aspects",
    "text": "4.5 Technical aspects\n\n4.5.1 Launch Monkeys on a server\nYou will need two files for the configuration in the hidden and NOT SHARED .vault/ folder:\n\n.vault/SERVER_PATH.R: contains the path where the protocols are located in your server: server_path = \"http://URL_OF_YOUR_SERVER/PROTOCOLS_GENERAL_FOLDER/\"\n.vault/.credentials: contains a list with the user and password for the server:\n\nlist(IP = \"IP ADDRESS OF SERVER\",\n     main_FOLDER = \"/MAIN/FOLDER/AND/PATH/TO/FILES/IN/THE/SERVER/\",\n     user = \"YOUR SERVER USERNAME\",\n     password = \"YOUR VERY STRONG SERVER PASSWORD\")\nWith the server_folder_tasks you will set the sub-folder where the protocol is located. In the example below the Monkeys would go to, http://URL_OF_YOUR_SERVER/PROTOCOLS_GENERAL_FOLDER/999\n\n\n4.5.2 Alternatives\nSince jsPsych 7.1 there is a simulation mode available, which should be much faster than the good ol’ Monkeys. Once we migrate to jsPSych 7.x, we may retire this section.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>jsPsychMonkeys</span>"
    ]
  },
  {
    "objectID": "qmd/05-jsPsychHelpeR.html#how-to-prepare-data",
    "href": "qmd/05-jsPsychHelpeR.html#how-to-prepare-data",
    "title": "5  jsPsychHelpeR",
    "section": "5.1 How to prepare data",
    "text": "5.1 How to prepare data\nOur goal is that each jsPsychMaker task has a sister script on jsPsychHelpeR to help prepare the data automatically. If a task you need does not have one, you can try to create the script yourself and do a pull request in the jsPsychHelpeR repo, or see the section help creating a new task.\nIf you already ran a pilot experiment, simply:\n\nInstall jsPsychHelpeR:\n\n\nif (!require('remotes')) utils::install.packages('remotes'); remotes::install_github('gorkang/jsPsychHelpeR')\n\n\njsPsychHelpeR::run_initial_setup() will:\n\n\nTry to make sure you have all the dependencies, folders, etc.\n\nCopy the data to the data/pid folder\n\nMove data with sensitive tasks to the .vault folder\n\nCreate a customized _targets.R file adapted to the data of your protocol, so data preparation can run automagically\n\n\njsPsychHelpeR::run_initial_setup(pid = '999', \n                                 data_location = '~/Downloads/JSPSYCH/999/', \n                                 folder = '~/Downloads/jsPsychHelpeR_999/')\n\nIf you have the sFTP credentials for the server, it will:\n\nDownload all the data from your protocol (you will need the FTP credentials and set download_files = TRUE)\n\nDownload and zip a copy of the full protocol without the data (you will need the FTP credentials and set download_task_script = TRUE)\n\n\nThis should work on Ubuntu, if you have the FTP credentials, and sshpass and rsync installed.\n\njsPsychHelpeR::run_initial_setup(pid = '999', \n                                 download_files = TRUE, \n                                 download_task_script = TRUE,\n                                 folder = \"~/Downloads/jsPsychHelpeR_999\")\n\n\n\n5.1.1 Targets pipeline\nTo help make the pipeline reproducible and more efficient, we use the targets package (Landau 2021). A few basic things to know:\n\nThe whole process can be reproduced running targets::tar_make()\nA nice visualization of all the pre-processing steps can be seen with targets::tar_visnetwork(targets_only = TRUE)\nThe file _targets.R contains the important parameters and calls to all the functions used when running targets::tar_make()\n\nTo see more detail about any specific step, you can:\n\nGo to the relevant function in _targets.R (cursor on a function, then F2)\nLoad the input parameters of the function with debug_function(NAME_OF FUNCTION). Alternatively, manually use targets::tar_load(NAME_OF_TARGET)\nRun the code step by step as you would normally do",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>jsPsychHelpeR</span>"
    ]
  },
  {
    "objectID": "qmd/05-jsPsychHelpeR.html#basics",
    "href": "qmd/05-jsPsychHelpeR.html#basics",
    "title": "5  jsPsychHelpeR",
    "section": "5.2 Basics",
    "text": "5.2 Basics\njsPsychHelpeR uses as input a data created with a jsPsychMaker experimental protocol.\n\n5.2.1 Inputs\nThe input data folder will be named after the protocol_id, for example 999/ and needs to be placed in the data/ folder of the jsPsychHelpeR project data/YOUR_PROJECT_NUMBER:\n\nThe data folder can contain either multiple .csv files, or a single .zip file\n\nThere will be a single .csv file for each participant and task of the protocol. For example:\n\n999_Consent_original_2022-04-02T205622_1.csv:\n\n[project: 999]_[experimento: Consent]_[version: original]_[datetime: 2022-04-02T205622]_[participant id: 1]\n\n\n\n\n5.2.2 Outputs\nWhen the pipeline successfully runs with targets::tar_make(), a number of outputs will be created.\nAll the outputs can be found in the /outputs folder. The only exception is the sensitive data and reports, which can be found in .vault/outputs. WARNING: The ‘.vault/’ folder MUST NOT be made public.\n\n5.2.2.1 Output folders\nThe outputs will be organized in different folders:\n\nData frames for different stages of data processing can be found in outputs/data\nTemporary files for manual correction are in outputs/data/manual_correction (the final manual correction files must be place by the user in data/manual_correction). WARNING: These will be overwritten each time the pipeline runs\nPlots, tables and reports are in outputs/plots, outputs/tablesand outputs/reports respectively.\nTest outputs are in outputs/tests_outputs\nAnonymized Raw data will be moved to .vault/data_vault/\n\n\n\n5.2.2.2 Output dataframes\nThere will be a single data frame (df) for each of the tasks in outputs/data, plus a data frame (DF) for each of the steps of the data preparation, and a dictionary file listing all the available tasks. We store the files in two formats, csv and rds:\n\nDF_raw.csv: All the data/project_id/ csv files combined on a single file. We only add the columns “project”, “experimento”, “version”, “datetime”, “id” by parsing the filenames\nDF_clean.csv: Clean version of the raw file ready to process the individual tasks\ndf_ShortNameOfTask.csv: One df for each of the tasks of the protocol after being processed with the prepare_ShortNameOfTask() functions\nDF_joined.csv: all the processed tasks joined in a single DF\nDF_analysis: only the total scores and dimensions from DF_joined (columns ending in _DIRt, _STDt, _DIRd, _RELd, STDd). Can be visually explored using the shiny app in Rmd/app.R\nDF_analysis_blinded: If the DVars parameter of create_DF_analysis() is not empty, jsPsychHelpeR will create DF_analysis_blinded where the DVars will be scrambled so te data analysts can perform blinded analysis\nDICCIONARY_tasks.csv: list of all tasks in the protocol\n\n\n\n5.2.2.3 Output dataframes column names\nAll the output processed data frames columns are named in a standardized way:\n\nShortNameOfTask_ItemNumber_RAW: raw responses of participants for individual items\nShortNameOfTask_ItemNumber_DIR: processed raw responses following the task correction instructions (e.g. inverting certain items, converting strings to numbers, computing accuracy…)\nShortNameOfTask_RAW_NA: number of missing data (NA) in the RAW responses\nShortNameOfTask_DIR_NA: number of missing data (NA) in the DIR responses. If it is not equal to ShortNameOfTask_RAW_NA there is something wrong in the items correction.\nShortNameOfTask_DimensionName_DIRd: scores for a specific dimension (d) in a task, calculated following task correction instructions (e.g. summing or averaging certain items)\nShortNameOfTask_DimensionName_RELd: scores for a specific dimension (d) in a task, calculated following task correction instructions AND after filtering items with low reliability. See Reliability section for more information.\nShortNameOfTask_DimensionName_STDd: standardized score for a dimension (d)\nShortNameOfTask_DIRt: total (t) score for a task calculated following task correction instructions (e.g. summing or averaging all items)\nShortNameOfTask_STDt: standardized (t) score for a task",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>jsPsychHelpeR</span>"
    ]
  },
  {
    "objectID": "qmd/05-jsPsychHelpeR.html#errors-in-the-pipeline",
    "href": "qmd/05-jsPsychHelpeR.html#errors-in-the-pipeline",
    "title": "5  jsPsychHelpeR",
    "section": "5.3 Errors in the pipeline",
    "text": "5.3 Errors in the pipeline\nSee the targets manual for more information.\nWe include tar_option_set(workspace_on_error = TRUE) in _targets_options.R so if there is an error in our pipeline, targets will automatically save the workspace. This allows you to go to the relevant target and debug interactivelly.\nIf you get an error:\n\nList the available workspaces (e.g. DF_clean):\n\ntar_workspaces()\n\nLoad the errored workspace:\n\ntar_workspace(DF_clean)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>jsPsychHelpeR</span>"
    ]
  },
  {
    "objectID": "qmd/05-jsPsychHelpeR.html#advanced",
    "href": "qmd/05-jsPsychHelpeR.html#advanced",
    "title": "5  jsPsychHelpeR",
    "section": "5.4 Advanced",
    "text": "5.4 Advanced\n\n5.4.1 Need help preparing new task\nIf you need help preparing a NEW task, see the section help with new tasks.\n\n\n5.4.2 Create your own reports\nYou can use any of the template reports in the _targets.R file, or create your own reports.\nWe will start opening one of the template reports: rstudioapi::navigateToFile(\"doc/report_analysis.Rmd\").\n\nEdit the RMarkdown file to adapt it to your needs.\nIf you already did targets::tar_make(), when running targets::tar_load(DF_analysis) the dataframe DF_analysis will load in your Environment.\n\nGo back to the _targets.R file:\n\nLook for # Analysis report and uncomment the following lines:\n\n\n# tar_render(report_analysis, \"doc/report_analysis.Rmd\",\n#            output_file = paste0(\"../outputs/reports/report_analysis.html\")),\n\nWhen you finished editing and uncomented the tar_render command, go back to the run.R file:\n\ntargets::tar_make()\n\n\n\n5.4.3 Create new tasks\nTo create the correction script for a new task, you start with:\n\ncreate_new_task(short_name_task = \"NAMETASK\")\n\nThis will:\n\ncreate a new file from a template correction script (R_tasks/prepare_TEMPLATE.R)\nadapt it to your short_name_task to make everything as standardized as possible\nopen the new prepare_NAMETASK.R file\n\nIf the parameter get_info_googledoc = TRUE:\n\nThe NEW tasks document is checked.\nIf the document has been filled properly, it will show in the console standardized strings (ready to be copy/pasted to the new prepare_NAMETASK.R file) about:\n\ndimension names\nitems corresponding to each dimension\ndimension calculation\ninverse items\nnumeric conversion of items\n\n\nYou can also use get_dimensions_googledoc() as a standalone function:\nget_dimensions_googledoc(short_name_text = \"MLQ\")\nAll the prepare_NAMEOFTASK.R scripts on the R_tasks/ folder have been created starting from the same template. The only exception are the experimental tasks and some surveys with particularities that require more complex adaptations.\nWhen you finish implementing the correction script, please do a Pull request so we can add you script to the pool. If you have not already, please help us filling up details about the task in the NEW tasks document.\n\n\n5.4.4 Adapting new tasks\nget_dimensions_googledoc will show you how to adapt the prepare_TASK() script, but you will need to know how it works to be able to edit the relevant bits. Also, sometimes get_dimensions_googledoc won’t get all the details of the task right, or there could be non-standard elements to it. Here, we will describe some of the elements of the template to help understand how it works.\nRemember you should ALWAYS start with create_new_task(short_name_task = \"NAMETASK\") so your task template works well with jsPsychHelpeR.\nThere are three chunks you will need to adapt to have a fully working preparation script.\n\n[ADAPT 1/3]: Items to ignore and reverse, dimensions\n[ADAPT 2/3]: RAW to DIR for individual items\n[ADAPT 3/3]: Scales and dimensions calculations\n\n\n5.4.4.1 Items to ignore and reverse, dimensions\n\n# [ADAPT 1/3]: Items to ignore and reverse, dimensions -----------------------\n# ****************************************************************************\n\ndescription_task = \"\" # Brief description here\n\nitems_to_ignore = c(\"000\") # Ignore these items: If nothing to ignore, keep as is\nitems_to_reverse = c(\"000\") # Reverse these items: If nothing to reverse, keep as is\n\n## NameDimension1, NameDimension2 should be the names of the dimensions\n## Inside each c() create a vector of the item numbers for the dimension\n## Add lines as needed. If there are no dimensions, keep as is\nitems_dimensions = list(\n  NameDimension1 = c(\"000\"),\n  NameDimension2 = c(\"000\")\n)\n\n# [END ADAPT 1/3]: ***********************************************************\n# ****************************************************************************\n\n\n\n5.4.4.2 RAW to DIR for individual items\n\nDF_long_DIR = \n    DF_long_RAW %&gt;% \n    select(id, trialid, RAW) %&gt;%\n    \n    \n    \n  # [ADAPT 2/3]: RAW to DIR for individual items -------------------------------\n  # ****************************************************************************\n  \n    # Transformations\n    mutate(\n      DIR =\n        case_when(\n          RAW == \"Nunca\" ~ 1,\n          RAW == \"Poco\" ~ 2,\n          RAW == \"Medianamente\" ~ 3,\n          RAW == \"Bastante\" ~ 4,\n          RAW == \"Mucho\" ~ 5,\n          is.na(RAW) ~ NA_real_,\n          grepl(items_to_ignore, trialid) ~ NA_real_,\n          TRUE ~ 9999\n        )\n    ) %&gt;% \n    \n    # Invert items\n    mutate(\n      DIR = \n        case_when(\n          DIR == 9999 ~ DIR, # To keep the missing values unchanged\n          trialid %in% paste0(short_name_scale_str, \"_\", items_to_reverse) ~ (6 - DIR),\n          TRUE ~ DIR\n        )\n    )\n    \n  # [END ADAPT 2/3]: ***********************************************************\n  # ****************************************************************************\n\n\n\n5.4.4.3 Scales and dimensions calculations\n\n# [ADAPT 3/3]: Scales and dimensions calculations ----------------------------\n# ****************************************************************************\n\n# Reliability -------------------------------------------------------------\n# REL1 = auto_reliability(DF_wide_RAW, short_name_scale = short_name_scale_str, items = items_DIRd1)\n# items_RELd1 = REL1$item_selection_string\n  \n\n# [USE STANDARD NAMES FOR Scales and dimensions: names_list$name_DIRd[1], names_list$name_DIRt,...] \n# CHECK with: create_formulas(type = \"dimensions_DIR\", functions = \"sum\", names_dimensions)\nDF_wide_RAW_DIR =\n  DF_wide_RAW %&gt;% \n  mutate(\n\n    # [CHECK] Using correct formula? rowMeans() / rowSums()\n    \n    # Score Dimensions (see standardized_names(help_names = TRUE) for instructions)\n    !!names_list$name_DIRd[1] := rowMeans(select(., paste0(short_name_scale_str, \"_\", items_dimensions[[1]], \"_DIR\")), na.rm = TRUE), \n    !!names_list$name_DIRd[2] := rowSums(select(., paste0(short_name_scale_str, \"_\", items_dimensions[[2]], \"_DIR\")), na.rm = TRUE),\n    \n    # Reliability Dimensions (see standardized_names(help_names = TRUE) for instructions)\n    # !!names_list$name_RELd[1] := rowMeans(select(., paste0(short_name_scale_str, \"_\", items_RELd1, \"_DIR\")), na.rm = TRUE), \n\n    # Score Scale\n    !!names_list$name_DIRt := rowSums(select(., matches(\"_DIR$\")), na.rm = TRUE)\n    \n  )\n  \n# [END ADAPT 3/3]: ***********************************************************\n# ****************************************************************************\n\n\n\n\n5.4.5 DEBUG tasks\nAt the begining of each of the R_tasks/prepare_NAMETASK.R scripts you will find a commented debug_function(prepare_NAMETASK) line.\nWhen running it, it will load the input parameters for the task. From there, you can work inside of the preparation scipt as you would normally do in a R script.\nIf you get the error \"Error in debug_function(prepare_NAMETASK) : could not find function 'debug_function'debug_function()does nor work\" you will need to load all the functions in the R/ folder first.\nYou can do this in one of three ways:\n\nCONTROL + P shortcut will work if the run_initial_setup() completed correctly (at least on Ubuntu systems).\nRun targets::tar_load_globals()\nOr directly, source all the scripts in the R/ folder: invisible(lapply(list.files(\"./R\", full.names = TRUE, pattern = \".R$\"), source))\n\n\n\n5.4.6 Docker containers\nThe function jsPsychHelpeR::create_docker_container() will create a fully reproducible docker container with the data preparation and analysis for a specific project.\nThe container can be easily shared or stored to allow others to run the data preparation and analysis for you project without worrying about dependencies, versions of packages, etc.\nSee more information about the setup in the admin section.\nThe gist of it is, after you have the full data preparation and analysis for you project ready, to create the container image and share it, just run:\n\n# 1) Set your project ID\n  PID = 999\n\n# 2) Create docker image\n  jsPsychHelpeR::create_docker_container(PID = PID)\n\n# 3) SHARE your docker image\n  \n  # Using Dockerhub\n    system(paste0(\"docker push gorkang/jspsychhelper:pid\", PID))\n    \n  # Using a .tar file\n    system(paste0(\"docker save gorkang/jspsychhelper:pid\", PID, \" | zip &gt; pid\", PID, \".tar.zip\"))\n\nTo load and run the container image (if you are using Windows, see here):\n\n# 1) Set your project ID\n  PID = 999\n\n# 2) Get the docker image loaded into to your computer\n\n  # Dockerhub\n  system(paste0(\"docker pull gorkang/jspsychhelper:pid\", PID))\n  \n  # .tar file\n  utils::unzip(zipfile = paste0(\"pid\", PID, \".tar.zip\"), files = paste0(\"-\"))\n  system(paste0(\"docker load --input -\"))\n  \n# 3) Run docker container\n  system(paste0(\"docker run --rm -d --name pid\", PID, \" -v ~/Downloads/jsPsychHelpeR\", PID, \"/outputs:/home/project/jsPsychHelpeR/outputs:rw gorkang/jspsychhelper:pid\", PID))\n\nThe output will be in Downloads/jsPsychHelpeR[PID]/outputs/ after a couple of minutes. You can see the data preparation and analysis progress using docker desktop.\n\n\n5.4.7 Blinded analysis\nThe function create_DF_analysis() has the parameter DVars to select the Dependent Variables in your data that should be scrambled to be ready for a blinded analysis. We use a simple sort() in those variables, so their data will be ordered from smaller to bigger, losing the relationship with the other variables in the data, but keeping their structure.\nSee MacCoun, R., & Perlmutter, S. (2015). Blind analysis: Hide results to seek the truth. Nature, 526(7572), 187-189 (https://doi.org/10.1038/526187a), or Sarafoglou, A., Hoogeveen, S., & Wagenmakers, E. J. (2023). Comparing analysis blinding with preregistration in the many-analysts religion project. Advances in Methods and Practices in Psychological Science, 6(1), 25152459221128319. (https://doi.org/10.1177/25152459221128319)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>jsPsychHelpeR</span>"
    ]
  },
  {
    "objectID": "qmd/05-jsPsychHelpeR.html#helper-functions",
    "href": "qmd/05-jsPsychHelpeR.html#helper-functions",
    "title": "5  jsPsychHelpeR",
    "section": "5.5 Helper functions",
    "text": "5.5 Helper functions\n\n5.5.1 Reliability\nYou can use the auto_reliability() function to help you automatically filter items with low reliability (although doing this automatically is probably a bad idea). The function uses psych::alpha() and filters by default items with an r.drop &lt;= 0.2. See psych::alpha() help for more details. IMPORTANT: Using psych::omega() is generally a better idea, see the alpha help page.\nAn example can be found in prepare_REI40().\nThe basic logic would be:\n\n# Define items for a specific dimension\nitems_DIRd1 = c(\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\")\n\n# Calculate reliability\nREL1 = auto_reliability(DF_wide_RAW, short_name_scale = short_name_scale_str, items = items_DIRd1, min_rdrop = 0.2)\n\n# Store item selection in a variable\nitems_RELd1 = REL1$item_selection_string\n\n# In the final Dimension calculation, use the item selection including only the items with a reliability over the defined threshold   \n## See `items_RELd1` below\n!!names_list$name_RELd[1] := rowMeans(select(., paste0(short_name_scale_str, \"_\", items_RELd1, \"_DIR\")), na.rm = TRUE), \n\n# Compare it with the calculation including the original items\n## See `items_DIRd1` below\n!!names_list$name_DIRd[1] := rowMeans(select(., paste0(short_name_scale_str, \"_\", items_DIRd1, \"_DIR\")), na.rm = TRUE),",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>jsPsychHelpeR</span>"
    ]
  },
  {
    "objectID": "qmd/05-jsPsychHelpeR.html#technical-aspects",
    "href": "qmd/05-jsPsychHelpeR.html#technical-aspects",
    "title": "5  jsPsychHelpeR",
    "section": "5.6 Technical aspects",
    "text": "5.6 Technical aspects\n\n5.6.1 How trialid’s are processed\nSee PRFBM:\n\nIf more than one response per screen\n\nItem: PRFBM_04\nResponses: {\"daño\":\"Parcialmente en desacuerdo\",\"beneficio\":\"Parcialmente en desacuerdo\"}\nfinal trialids: PRFBM_04_beneficio and PRFBM_04_daño",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>jsPsychHelpeR</span>"
    ]
  },
  {
    "objectID": "qmd/05-jsPsychHelpeR.html#common-errors",
    "href": "qmd/05-jsPsychHelpeR.html#common-errors",
    "title": "5  jsPsychHelpeR",
    "section": "5.7 Common ERRORS",
    "text": "5.7 Common ERRORS\n\n5.7.1 run_initial_setup():\nx Can find server credentials in '.vault/.credentials'\nx 0 tasks found for protocol 'TU NUMERO DE PROYECTO'. NOT creating _targets.R file\n\n5.7.1.1 On Linux (Ubuntu):\n\nIF you have the server credentials:\n\nOpen .credentials_TEMPLATE rstudioapi::navigateToFile(\".vault/.credentials_TEMPLATE\")\nEdit the file with your server credentials\nRename the file to .credentials\n\n\n\n\nIF you DON’T have the credentials but you have the .csv results files:\n\nCopy the csv files to the folder data/YOUR_PROJECT_NUMBER\nRun again run_initial_setup()\n\n\n\n\n5.7.1.2 On Mac or Windows:\n\nCopy the csv files to the folder data/YOUR_PROJECT_NUMBER\nRun again run_initial_setup()\n\n\n\n\n5.7.2 Rendering Rmd’s\n\nError: ! missing files _targets/meta/meta Execution halted\n\nIt is better to run everything, including your reports, inside the pipeline (targets::tar_make()).\nIf you need to the knitr (or render) button, you will have to:\n\nLoad DF’s DF_analysis = readr::read_rds(here::here(\"_targets/objects/DF_analysis\")) instead of targets::tar_load(DF_analysis)\nInclude all the necessary library() calls\n\n\nError : Could not parse knitr report Rmd/report_analysis.Rmd to detect dependencies: Scanner error: mapping values are not allowed in this context at line 6, column 17\n\nThere is something wrong in Your YAML heather.\n\n\n\n\nLandau, William Michael. 2021. “The Targets r Package: A Dynamic Make-Like Function-Oriented Pipeline Toolkit for Reproducibility and High-Performance Computing.” Journal of Open Source Software 6 (57): 2959. https://doi.org/10.21105/joss.02959.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>jsPsychHelpeR</span>"
    ]
  },
  {
    "objectID": "qmd/06-jsPsychRadmins.html#docker-containers",
    "href": "qmd/06-jsPsychRadmins.html#docker-containers",
    "title": "6  jsPsychR Admins",
    "section": "6.1 Docker containers",
    "text": "6.1 Docker containers\nWe can create a fully reproducible docker image with the data preparation and analysis for a specific project using jsPsychHelpeR::create_docker_container()\nAfterwards, you can use the image to run a docker container that will reproduce the analysis and results of your project.\nThe current version is a first attempt at this, so there is a lot to improve.\n\n6.1.1 Install Docker\nFirst, we need to install docker.\n\nLinux: follow installation instructions\nMac: follow installation instructions\nWindows:\n\nInstall docker desktop\nUpdate wsl (in a command prompt): wsl – update\n\n\n\n\n6.1.2 Create image for a project\nWhen a project is ready to share, you can create a self-contained docker image:\n\n# Clean environment -------------------------------------------------------\n\n  # DELETE ALL CACHE\n  system(\"docker builder prune --all -f\")\n  \n  # Clean renv cache libraries\n  renv::clean()\n\n  # Clean extra versions of libraries\n  source(\"R/helper_functions_extra.R\")\n  clean_renv_cache()\n\n\n# Create docker image -----------------------------------------------------  \n  \n  PID = 999\n  jsPsychHelpeR::create_docker_container(PID = PID)\n\n\n\n6.1.3 Store image\nYou can create a tar file with the image or directly share it through dockerhub:\n\nStore image creating a pid[PID].tar.zip file TO SHARE\n\n\n  PID = 999\n  system(paste0(\"docker save gorkang/jspsychhelper:pid\", PID, \" | zip &gt; pid\", PID, \".tar.zip\"))\n\n\nPush image to Dockerhub\n\n\n  PID = 999\n  system(paste0(\"docker push gorkang/jspsychhelper:pid\", PID))\n\n\n\n6.1.4 Load image\nYou can load the image in your computer in two ways:\n\nUsing a pid[PID].tar.zip:\n\nOn linux:\n\n  PID = 999\n  utils::unzip(zipfile = paste0(\"pid\", PID, \".tar.zip\"), files = paste0(\"-\"))\n  system(paste0(\"docker load --input -\"))\n\nOn windows:\n\n\ntar -xf pid999.tar.zip & docker load input - \n\n\n\nPull image from Dockerhub\n\n\n  PID = 999\n  system(paste0(\"docker pull gorkang/jspsychhelper:pid\", PID))\n\n\n\n6.1.5 Run container\nOnce the docker image is loaded in your system, you will be able to run the data preparation and analysis for your project inside a docker container, ensuring reproducibility. The output will be in Downloads/jsPsychHelpeR[PID]/outputs after a couple of minutes.\n\nLinux\n\n\n  # Make sure ~/Downloads/jsPsychHelpeR999 is empty\n  file.remove(list.files(paste0(\"~/Downloads/jsPsychHelpeR\", PID, \"/outputs\"), recursive = TRUE, full.names = TRUE))\n  \n  # Run docker\n  system(paste0(\"docker run --rm -d --name pid\", PID, \" -v ~/Downloads/jsPsychHelpeR\", PID, \"/outputs:/home/project/jsPsychHelpeR/outputs:rw gorkang/jspsychhelper:pid\", PID))\n\n\nWindows\n\n\n\ndocker run --rm -d --name jspsychhelper -v %USERPROFILE%\\Downloads\\jsPsychHelpeR\\outputs:/home/project/jsPsychHelpeR/outputs:rw gorkang/jspsychhelper:pid999\n\n\n\n\n6.1.6 DEBUG Container\nYou can DEBUG a container with the following command:\n\n\ndocker run --rm -ti -v ~/Downloads/jsPsychHelpeR999/outputs:/home/project/jsPsychHelpeR/outputs:rw gorkang/jspsychhelper:pid999 /bin/bash\n\n\nInside the container, you can acces R and debug as you would locally.\n\n# See last CMD line in Dockerfile_TEMPLATE:\n# $ R\nsource('renv/activate.R')\ninvisible(lapply(list.files('./R', full.names = TRUE, pattern = '.R$'), source))\nsetup_folders(pid = 999, folder = '.')\ntargets::tar_destroy(ask = FALSE)\ntargets::tar_make()\n\n# Check size folders\ndu -had1 renv/ | sort -h\ndu -had1 * | sort -h",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>jsPsychR Admins</span>"
    ]
  },
  {
    "objectID": "qmd/06-jsPsychRadmins.html#google-docs",
    "href": "qmd/06-jsPsychRadmins.html#google-docs",
    "title": "6  jsPsychR Admins",
    "section": "6.2 Google Docs",
    "text": "6.2 Google Docs\nWe have a few Google Documents with information about available tasks, protocols, etc.\n\nAll tasks\nList of protocols\nNEW tasks\nChecks specific tasks",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>jsPsychR Admins</span>"
    ]
  },
  {
    "objectID": "qmd/06-jsPsychRadmins.html#folders-and-how-to-work",
    "href": "qmd/06-jsPsychRadmins.html#folders-and-how-to-work",
    "title": "6  jsPsychR Admins",
    "section": "6.3 Folders and how to work",
    "text": "6.3 Folders and how to work\nWe have two main locations, the Github jsPsychMaker project and the server.\nGithub jsPsychMaker project\n\ncanonical_protocol:\n\nmachinery: last stable version\ntasks: all available tasks\nserver: protocols/999/\n\ncanonical_protocol_DEV\n\nmachinery: development version\ntasks: all available tasks\nserver: protocols/test/canonical_protocol_DEV/\n\ncanonical_protocol_clean\n\nmachinery: last stable version\ntasks: Consent and Goodbye\nserver: protocols/test/canonical_protocol_clean/\n\nprotocols_DEV\n\nmachinery: last stable version\nshould only contain tasks in development\nserver: protocols/test/protocols_DEV/\n\n\nIn protocols_DEV we prepare the new protocolos:\n\nCreate a copy in test/protocols_DEV of canonical_protocol_clean and rename to the number of the new protocol, test/protocols_DEV/NumberOfProtocol\nOnce the protocol is ready:\n\nCopy protocol to root folder: protocols/NumberOfProtocol\nZIP subfolder and move zip to protocols/test/protocols_DEV/OLD_TESTS/\nDelete folder test/protocols_DEV/NumberOfProtocol\n\nIf there are new tasks:\n\nCHECK with: check_missing_prepare_TASK()\nTEST with create_protocol_with_NEW_tasks.R\nCopy tasks, images, videos, specific plugins, etc. to protocols/999/\nTEST in canonical protocol protocols/999/ just in case there is a weird interaction",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>jsPsychR Admins</span>"
    ]
  },
  {
    "objectID": "qmd/06-jsPsychRadmins.html#helper-functions",
    "href": "qmd/06-jsPsychRadmins.html#helper-functions",
    "title": "6  jsPsychR Admins",
    "section": "6.4 Helper functions",
    "text": "6.4 Helper functions\nThere are a number of helper functions to make some of the jsPsychR admins tasks easier.\n\n6.4.1 Check all protocols\nFor example, we can use check_missing_prepare_TASK() to:\n\nDownload all the protocols (without data) to a local folder (sync_protocols = TRUE)\nCheck the trialid’s of all the tests are OK (check_trialids = TRUE)\nCheck there are no duplicate short_name of tasks in the tareas jsPsychR and NUEVAS tareas\nCheck which tasks do not have a prepare_TASK.R script\nCheck tasks with no info on the tareas jsPsychR Google doc\nCheck tasks with missing info on NUEVAS tareas\n\n\n# Open jsPsychHelpeR RStudio project\n\n  # Load check_missing_prepare_TASK() function\n  # cli::cli_alert_info(getwd())\n\n  WD = getwd()\n  setwd(\"../../jsPsychHelpeR/\")\n  source(\"R/check_missing_prepare_TASK.R\")\n  # source(\"../../jsPsychHelpeR/R/check_missing_prepare_TASK.R\")\n  setwd(WD)\n  \n  # If sync_protocols = TRUE, will download to ../CSCN-server/protocols all the protocols from the server\n  DF_missing = check_missing_prepare_TASK(sync_protocols = FALSE,\n                                          check_trialids = TRUE,\n                                          delete_nonexistent = TRUE,\n                                          check_new_task_tabs = TRUE,\n                                          helper_folder = \"../../jsPsychHelpeR\",\n                                          CSCN_server_folder = \"../../CSCN-server/\")\n\n  # - Tasks with no prepare_TASK() script!\n  # - Tasks NOT in Google Doc\n  # - Check trialid's are OK\n  DF_missing\n\n  DF_missing$DF_FINAL %&gt;% tidyr::replace_na(list(missing_script = \"\",\n                                                 missing_googledoc = \"\",\n                                                 missing_task = \"\"))\n\n\n  # Tasks ready to create prepare_*.R script\n  DF_missing$DF_FINAL %&gt;% filter(!is.na(missing_script) & is.na(missing_gdoc))\n  DF_missing$DF_FINAL %&gt;% filter(!is.na(missing_script) | !is.na(missing_gdoc)) %&gt;%\n    filter(!task %in% c(\"DEMOGR24\", \"DEMOGRfondecyt2022E1\", \"ITC\", \"fauxPasEv\")) %&gt;%  # \"MDDF_respaldo\", \"mic_test\", \"faux_pas\",\n    select(-matches(\"missing\"), -Nombre, -Descripcion)\n\n\n\n6.4.2 Create protocol with NEW tasks\nWith create_protocol_with_NEW_tasks.R we can create a protocol with the tasks for which we do not yet have a control snapshot (no .csv’s in the 999.zip data).\nThis is a necessary step before the task can be moved to the canonical protocol.\nThe function find_missing_tasks_in_999() will read all the csv in jsPsychHelpeR/data/999/999.zip and depending on the value of the parameter search_where (“prepare_TASK” or “js”):\n\nall .js tasks in jsPsychMaker/protocols_DEV/\nall prepare_TASK.R in jsPSychHelpeR/R_tasks/\n\nComparing both sources, will look for tasks for which we do not have a .csv in the 999 protocol yet (remember the 999 protocol is the canonical_protocol in the server).\nThen, it prepares a NEW_TASKS protocol using the tasks.js files found in the server (after downloading all the server protocols to jsPsychR/CSCN-server/). A couple important points:\n\nThis is a bit tricky, as it will use all the tasks in the server that it can found, across all the protocols, and will select the newest one.\nSometimes there are multiple copies, with different dates and sizes…\nIt is important that the server is as clean as possible. With all the OLD non-updated protocols zipped.\n\nTo make sure the Github jsPsychMaker/protocols_DEV/NEW_TASKS/ is up to date, create_protocol_with_NEW_tasks.R will UPLOAD CSCN-server/.../NEW_TASKS to the server, and then DOWNLOAD NEW_TASKS to ../jsPsychMaker/protocols_DEV/NEW_TASKS/\n\n\n6.4.3 Check canonical protocol DEV\nWith 000_CHECK_CANONICAL.R we can check that the canonical protocol in development works and expected.\nIn the script you can:\n\nsync canonical_protocol_DEV/ folder in jsPsychMaker to 999/ in the server\nlaunch 5 monkeys\nrename the csv files to a fixed date, etc.\nprepare data\ncompare with snaphot (WIP)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>jsPsychR Admins</span>"
    ]
  },
  {
    "objectID": "qmd/07-NEWtasks.html#Newprotocols",
    "href": "qmd/07-NEWtasks.html#Newprotocols",
    "title": "7  New protocols and tasks",
    "section": "7.1 New protocols",
    "text": "7.1 New protocols\nYou can create a new protocol in seconds, choosing from the tasks we already have available.\nMake sure you have the last version of jsPsychMaker, installing from Github:\n\nif (!require('pak')) install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychMaker\")\n\nCheck if there are new tasks available in a new version of the Github package:\njsPsychMaker::check_NEW_tasks_Github()\n\n7.1.1 List available tasks\nYou can list available tasks to choose from. You have more details in the section available-tasks. You can choose between available tasks for jsPsych 6.3 and jsPsych 7.3 with jsPsych_version.\n\n  jsPsychMaker::list_available_tasks(jsPsych_version = 6)\n\n$tasks\n [1] \"AIM\"                 \"AntiBots\"            \"Bank\"               \n [4] \"BART\"                \"BDI\"                 \"BNT\"                \n [7] \"bRCOPE\"              \"CAS\"                 \"CEL\"                \n[10] \"CIT\"                 \"CMApost\"             \"CMApre\"             \n[13] \"Consent\"             \"ConsentAudio\"        \"ConsentHTML\"        \n[16] \"Cov19Q\"              \"COVIDCONTROL\"        \"CRQ\"                \n[19] \"CRS\"                 \"CRT7\"                \"CRTMCQ4\"            \n[22] \"CRTv\"                \"CS\"                  \"CTT\"                \n[25] \"DASS21\"              \"DEBRIEF\"             \"DEMOGR\"             \n[28] \"DMW\"                 \"EAR\"                 \"EmpaTom\"            \n[31] \"EQ\"                  \"ERQ\"                 \"ESM\"                \n[34] \"ESV\"                 \"ESZ\"                 \"fauxPasEv\"          \n[37] \"FDMQ\"                \"FKEA\"                \"GBS\"                \n[40] \"GHQ12\"               \"Goodbye\"             \"HRPVB\"              \n[43] \"HRPVBpost\"           \"IBT\"                 \"ICvsID\"             \n[46] \"IDQ\"                 \"IEC\"                 \"INFCONS\"            \n[49] \"IRI\"                 \"IRS\"                 \"LoB\"                \n[52] \"LOT\"                 \"LSNS\"                \"MCQ30\"              \n[55] \"MDDF\"                \"MDMQ\"                \"MIS\"                \n[58] \"NARS\"                \"OBJNUM\"              \"OTRASRELIG\"         \n[61] \"PBSr\"                \"PERMA\"               \"PPD\"                \n[64] \"PRFBM\"               \"PRFBMpost\"           \"PSC\"                \n[67] \"PSETPP\"              \"PSPPC\"               \"PSS\"                \n[70] \"PVC\"                 \"PWb\"                 \"REI40\"              \n[73] \"Report\"              \"RMET\"                \"RobToM\"             \n[76] \"RSS\"                 \"RTS\"                 \"SASS\"               \n[79] \"SBS\"                 \"SCGT\"                \"SCSORF\"             \n[82] \"SDG\"                 \"SILS\"                \"sProQOL\"            \n[85] \"SRA\"                 \"SRBQP\"               \"SRSav\"              \n[88] \"STAI\"                \"SWBQ\"                \"UCLA\"               \n[91] \"WaisMatricesES\"      \"WaisWorkingMemoryES\" \"WEBEXEC\"            \n\n$tasks_js\n [1] \"AIM.js\"                 \"AntiBots.js\"            \"Bank.js\"               \n [4] \"BART.js\"                \"BDI.js\"                 \"BNT.js\"                \n [7] \"bRCOPE.js\"              \"CAS.js\"                 \"CEL.js\"                \n[10] \"CIT.js\"                 \"CMApost.js\"             \"CMApre.js\"             \n[13] \"Consent.js\"             \"ConsentAudio.js\"        \"ConsentHTML.js\"        \n[16] \"Cov19Q.js\"              \"COVIDCONTROL.js\"        \"CRQ.js\"                \n[19] \"CRS.js\"                 \"CRT7.js\"                \"CRTMCQ4.js\"            \n[22] \"CRTv.js\"                \"CS.js\"                  \"CTT.js\"                \n[25] \"DASS21.js\"              \"DEBRIEF.js\"             \"DEMOGR.js\"             \n[28] \"DMW.js\"                 \"EAR.js\"                 \"EmpaTom.js\"            \n[31] \"EQ.js\"                  \"ERQ.js\"                 \"ESM.js\"                \n[34] \"ESV.js\"                 \"ESZ.js\"                 \"fauxPasEv.js\"          \n[37] \"FDMQ.js\"                \"FKEA.js\"                \"GBS.js\"                \n[40] \"GHQ12.js\"               \"Goodbye.js\"             \"HRPVB.js\"              \n[43] \"HRPVBpost.js\"           \"IBT.js\"                 \"ICvsID.js\"             \n[46] \"IDQ.js\"                 \"IEC.js\"                 \"INFCONS.js\"            \n[49] \"IRI.js\"                 \"IRS.js\"                 \"LoB.js\"                \n[52] \"LOT.js\"                 \"LSNS.js\"                \"MCQ30.js\"              \n[55] \"MDDF.js\"                \"MDMQ.js\"                \"MIS.js\"                \n[58] \"NARS.js\"                \"OBJNUM.js\"              \"OTRASRELIG.js\"         \n[61] \"PBSr.js\"                \"PERMA.js\"               \"PPD.js\"                \n[64] \"PRFBM.js\"               \"PRFBMpost.js\"           \"PSC.js\"                \n[67] \"PSETPP.js\"              \"PSPPC.js\"               \"PSS.js\"                \n[70] \"PVC.js\"                 \"PWb.js\"                 \"REI40.js\"              \n[73] \"Report.js\"              \"RMET.js\"                \"RobToM.js\"             \n[76] \"RSS.js\"                 \"RTS.js\"                 \"SASS.js\"               \n[79] \"SBS.js\"                 \"SCGT.js\"                \"SCSORF.js\"             \n[82] \"SDG.js\"                 \"SILS.js\"                \"sProQOL.js\"            \n[85] \"SRA.js\"                 \"SRBQP.js\"               \"SRSav.js\"              \n[88] \"STAI.js\"                \"SWBQ.js\"                \"UCLA.js\"               \n[91] \"WaisMatricesES.js\"      \"WaisWorkingMemoryES.js\" \"WEBEXEC.js\"            \n\n\n\n\n7.1.2 Create a protocol\nThis will create a fully working protocol in folder_output. You can edit config.js to adapt the protocol to your needs. See experiment configuration for more details.\n\n  jsPsychMaker::create_protocol(canonical_tasks = c(\"AIM\", \"EAR\", \"IRI\"),\n                                folder_output = \"~/Downloads/protocol999\", \n                                launch_browser = TRUE,\n                                jsPsych_version = 6)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>New protocols and tasks</span>"
    ]
  },
  {
    "objectID": "qmd/07-NEWtasks.html#Newtasks",
    "href": "qmd/07-NEWtasks.html#Newtasks",
    "title": "7  New protocols and tasks",
    "section": "7.2 New tasks",
    "text": "7.2 New tasks\n\n7.2.1 Create tasks\nYou can create new tasks with create_task() using csv or xls/xlxs files for the items, and html files for the instructions. But we recommend you use create_protocol() instead, so the tasks will be part of a fully working protocol, and testing them will be a breeze.\nThere are some things to take into account:\n\nfolder_tasks expects a folder with sub-folders with the ShortName of tasks (ShortName is an example of the ShortName of a task, for example, MyTask). Inside, they need to have one ShortName.csv or ShortName.xls/xlxs file and *_instructions.html files. Use jsPsychMaker::copy_example_tasks(destination_folder = \"~/Downloads/TEST\") to see a working example\nThe csv or xls/xlsx file (ShortName.csv or Shortname.xls/xlsx) needs to have an ID and plugin columns, and then columns by the name of parameters used in the plugin (e.g. if using the survey-text plugin, you will need the prompt parameter). If you need help with the plugins parameters, see the jsPsych 6.3 list of plugins\nFor each html file ending with _instructions.html or instructions#.html (# is a number), an instructions page will be created (e.g. ShortName_instructions.html, ShortName_instructions2.html, etc). If there is no html, a default page will be used.\nFor key questions (e.g. present this question only if participants responded “3”), you need to create a column named if_question and include a logical condition. For example:\n\n1 != 25: Response to item 1 is NOT 25\n3 == 20: Response to item 3 is 20\n15 == yes: Response to item 3 is yes\n\nIf you use tasks with images, video or audio, make sure to include the files in a media/ folder, inside a subfolder with the name of the task. So, if your task name is ALL:\n\nImages: media/images/ALL\n\nVideos: media/videos/ALL\n\nAudio: media/audios/ALL\n\nIf you use a plugin with different options or alternatives (e.g. survey-multi-choice-vertical), the different response options will be the words or sentences separated by semi-colons (e.g. Yes, I am; No, I am not). If your options have semi-colons, you can to use the options_separator parameter to change the default.\n\n\nYou can run the fully reproducible example included in jsPsychMaker:\n\nInstall jsPsychMaker from Github and load library\n\n\nif (!require('pak')) install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychMaker\")\n\n\nCopy example tasks\n\nThis will copy a few example tasks that you use to adapt your tasks. For example, MultiChoice and Slider tasks, a key questions mini-task (IfQuestion), and an ImageButtonResponse task.\n\n  jsPsychMaker::copy_example_tasks(destination_folder = \"~/Downloads/ExampleTasks\")\n\n\nCreate your protocol\n\n\n  # Create protocol\n  jsPsychMaker::create_protocol(folder_tasks = \"~/Downloads/ExampleTasks/\", \n                                folder_output = \"~/Downloads/protocol999\", \n                                launch_browser = TRUE)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>New protocols and tasks</span>"
    ]
  },
  {
    "objectID": "qmd/07-NEWtasks.html#HelpNewtasks",
    "href": "qmd/07-NEWtasks.html#HelpNewtasks",
    "title": "7  New protocols and tasks",
    "section": "7.3 HELP with new tasks",
    "text": "7.3 HELP with new tasks\nIf you need help developing new tasks, you can open a new Issue in the jsPsychMaker Github.\nWe will ask you to add the details about the task in the NEW tasks document.\nOnce the task is implemented, our goal is to always end up having a sister task preparation script in jsPsychHelpeR. You can try to create the preparation script and do a Pull request, or ask for help opening a new Issue in the jsPsychHelpeR Github.\n\n7.3.1 How to fill the NEW tasks document\n\nNEW tasks document\n\nFirst of all, you will need the original paper where the task was validated/translated to have all the details at hand. Please, send us a link to the paper.\nThe best way to fill the NEW tasks document is:\n\nFind a task similar to yours in the document Tareas jsPsychR where we have information about all the available tasks.\nCopy/paste the information from all the tabs to the NEW tasks document and adapt it.\n\nTry to be as consistent as possible. For example, when entering the information about numeric conversion in the Puntajes_items tab:\nAll the cells must be:  \n1 = Mucho  \n2 = Poco  \n...\nDO NOT do things like:\n1: Mucho  \n1 Mucho  \n1 pto = Mucho  \nMucho 1  \nPlease, make sure you fill out all the details in all the tabs.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>New protocols and tasks</span>"
    ]
  },
  {
    "objectID": "qmd/08-CreateSimulatePrepare.html#create-protocol",
    "href": "qmd/08-CreateSimulatePrepare.html#create-protocol",
    "title": "8  CreateSimulatePrepare",
    "section": "8.1 Create protocol",
    "text": "8.1 Create protocol\nCreate a protocol with jsPsychMaker::create_protocol():\n\n# 1) Install jsPsychMaker\nif (!require('remotes')) install.packages('remotes'); remotes::install_github(\"gorkang/jsPsychMaker\")\n\n# 2) Check available tasks\njsPsychMaker::list_available_tasks()$tasks\n\n# 3) Create protocol\njsPsychMaker::create_protocol(canonical_tasks = c(\"AIM\", \"EAR\", \"IRI\"),\n                              folder_output = \"~/Downloads/protocol999\", \n                              launch_browser = FALSE)\n\nYou can now edit the configuration file (~/Downloads/protocol999/config.js) to adjust the project’s parameters.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>CreateSimulatePrepare</span>"
    ]
  },
  {
    "objectID": "qmd/08-CreateSimulatePrepare.html#simulate-participants",
    "href": "qmd/08-CreateSimulatePrepare.html#simulate-participants",
    "title": "8  CreateSimulatePrepare",
    "section": "8.2 Simulate participants",
    "text": "8.2 Simulate participants\nSimulate participants with {jsPsychMonkeys}. Make sure your system has a functioning docker installation, see jsPsychMonkey’s setup.\nIf you are on Windows, make sure Docker Desktop is open and running before releasing the monkeys.\n\n# 1) Install jsPsychMonkeys\nif (!require('remotes')) utils::install.packages('remotes'); remotes::install_github('gorkang/jsPsychMonkeys')\n\n# 2) Run monkeys\n  # Go to _targets.R: Change parameter `local_folder_tasks` to your folder_output above. For example:  \n  # - On Ubuntu, `local_folder_tasks = \"~/Downloads/protocol999\"`\n  # - On Windows, `local_folder_tasks = \"C:/Users/myusername/Downloads/protocol999\"`\n\njsPsychMonkeys::release_the_monkeys(uid = 1:10, \n                                    local_folder_tasks = \"~/Downloads/protocol999/\")\n\nThe monkeys responses csv’s should be initially downloaded in your Downloads folder, and automatically moved to a .data/ folder inside the protocol folder. For example, ~/Downloads/protocol999/.data",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>CreateSimulatePrepare</span>"
    ]
  },
  {
    "objectID": "qmd/08-CreateSimulatePrepare.html#prepare-data",
    "href": "qmd/08-CreateSimulatePrepare.html#prepare-data",
    "title": "8  CreateSimulatePrepare",
    "section": "8.3 Prepare data",
    "text": "8.3 Prepare data\nCreate a data preparation project with jsPsychHelpeR::run_initial_setup():\n\n# 1) Install\nif (!require('remotes')) install.packages('remotes'); remotes::install_github(\"gorkang/jsPsychHelpeR\")\n\n# 2) Create project\njsPsychHelpeR::run_initial_setup(pid = \"999\", data_location = \"~/Downloads/protocol999/.data\", dont_ask = TRUE)\n\n# 3) Restore all the necessary packages using {renv}\nrenv::restore(prompt = FALSE)\n\n# 4) Run data preparation\ntargets::tar_make()\n\nIf you don’t give a value to the folder parameter in jsPsychHelpeR::run_initial_setup(), the new project will be created in ~/Downloads/jsPsychHelpeRtest/. After step 4), the prepared data can be found in the outputs/data folder of the new project, reports in outputs/reports, etc.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>CreateSimulatePrepare</span>"
    ]
  },
  {
    "objectID": "qmd/09-CommonTasks.html#install-dependencies",
    "href": "qmd/09-CommonTasks.html#install-dependencies",
    "title": "9  Common Tasks",
    "section": "9.1 Install dependencies",
    "text": "9.1 Install dependencies\nInstall the last versions of all the packages:\n\nif (!require('pak')) install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychAdmin\")\nif (!require('pak')) install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychMaker\")\nif (!require('pak')) install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychMonkeys\")\nif (!require('pak')) install.packages('pak'); pak::pkg_install(\"gorkang/jsPsychHelpeR\")",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Common Tasks</span>"
    ]
  },
  {
    "objectID": "qmd/09-CommonTasks.html#developing-a-protocol",
    "href": "qmd/09-CommonTasks.html#developing-a-protocol",
    "title": "9  Common Tasks",
    "section": "9.2 Developing a protocol",
    "text": "9.2 Developing a protocol\n\n9.2.1 Adding new tasks\nCopy example tasks to a local folder, and adapt with the information of the new task. For example:\n\njsPsychMaker::copy_example_tasks(\n  destination_folder = \"~/Downloads/ExampleTasks\", \n  which_tasks = \"MultiChoice\")\n\n\n\n9.2.2 Creating a protocol\nYou can choose any of the canonical tasks (jsPsychMaker::list_available_tasks()$tasks), and/or a folder with the new tasks (~/Downloads/ExampleTasks).\n\njsPsychMaker::create_protocol(\n  canonical_tasks = c(\"BNT\"), # Berlin Numeracy Test\n  folder_tasks = \"~/Downloads/ExampleTasks/\",\n  folder_output = \"~/Downloads/protocol9996\",\n  launch_browser = TRUE\n)\n\n\n\n9.2.3 Piloting the protocol\nUse local_folder_tasks to test local protocols.\n\njsPsychMonkeys::release_the_monkeys(\n  uid = 1:10,\n  sequential_parallel = \"parallel\",\n  number_of_cores = 10,\n  local_folder_tasks = \"~/Downloads/protocol9996/\",\n  open_VNC = FALSE\n)\n\nIf your protocol is on a server, use server_folder_tasks. You will need a credentials_folder with the server access credentials.\n\njsPsychMonkeys::release_the_monkeys(\n  uid = \"1:10\",\n  sequential_parallel = \"parallel\",\n  number_of_cores = 10,\n  server_folder_tasks = \"test/protocols_DEV/999\",\n  DEBUG = FALSE,\n  credentials_folder = \"~/my_location/.vault/\", \n  open_VNC = FALSE\n  )\n\n\n\n9.2.4 Creating helper project\nIf it is a local protocol:\n\njsPsychHelpeR::run_initial_setup(\n  pid = 9996,\n  data_location = \"~/Downloads/protocol9996/.data/\",\n  folder = \"~/Downloads/jsPsychHelpeR9996\", \n  dont_ask = TRUE\n  )\n\nIf it is an online protocol:\n\njsPsychHelpeR::run_initial_setup(\n  pid = 9996,\n  download_files = TRUE,\n  credentials_file = \"/path_to_credentials/.credentials\",\n  folder = \"~/Downloads/jsPsychHelpeR9996\", \n  dont_ask = TRUE\n  )\n\n\n\n9.2.5 Deleting pilot data\n\n    # Delete the XYZ protocol rows in all the MYSQL tables\n    source(\"admin/mysql_helper_functions.R\")\n    # list_credentials = decrypt_data(key_public = readLines(\".vault/data_public_key.txt\"), data_encrypted = \".vault/data_encrypted.rds\", mysupersecretpassword = rstudioapi::askForPassword())\n    delete_MySQL_tables_pid(pid)\n    \n  \n  # 3) Limpiar los archivos de resultados de Monkeys -----------------------\n    \n    # Delete csv files in .data/\n    # rstudioapi::navigateToFile(\".vault/.credentials\") \n    DELETE_data_server(pid = PROTOCOLID)\n\n\n\n9.2.6 Preparing Helper project\n\n9.2.6.1 Get data\nWill download a zip file with the data.\n\n# if (!require('renv')) utils::install.packages('renv'); renv::install('gorkang/jsPsychHelpeR')\n\n# Developing protocol\njsPsychHelpeR::get_zip(pid = \"test/protocols_DEV/31\", \n                       what = \"data\", \n                       where = \"data/\")\n\n# Production protocol\njsPsychHelpeR::get_zip(pid = \"999\",\n                       what = \"data\", \n                       where = \"data/\")",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Common Tasks</span>"
    ]
  },
  {
    "objectID": "qmd/09-CommonTasks.html#protocol-to-production",
    "href": "qmd/09-CommonTasks.html#protocol-to-production",
    "title": "9  Common Tasks",
    "section": "9.3 Protocol to production",
    "text": "9.3 Protocol to production\nFrom admin/000_PREPARE_protocol_for_production.R in jsPsychAdmin\n\n# Checklist para pasar protocolos de test/protocols_DEV/ a produccion\n\n  # PARAMETERS --------------------------------\n\n  PROTOCOLID = \"test/protocols_DEV/31\"\n  number_of_monkeys = \"1:100\"\n\n  # -------------------------------------------\n\n  # Automatic parameters\n  pid = gsub(\"test/protocols_DEV/\", \"\", PROTOCOLID)\n\n\n   cli::cli_h1(\"PROTOCOL {pid}\")\n\n\n  # 1) Pilotaje final on Monkeys! -------------------------------------------\n\n  # Clean data and MySQL DB\n  # rstudioapi::navigateToFile(\".vault/.credentials\")\n  jsPsychAdmin::clean_up_dev_protocol(protocol_id = PROTOCOLID) # Will ask for server password\n\n\n  # LAUNCH MONKEYS\n  jsPsychMonkeys::release_the_monkeys(uid = number_of_monkeys,\n                                      server_folder_tasks = PROTOCOLID,\n                                      sequential_parallel = \"parallel\",\n                                      number_of_cores = 10,\n                                      big_container = TRUE,\n                                      keep_alive = FALSE, \n                                      open_VNC = FALSE, \n                                      screenshot = FALSE,\n                                      credentials_folder = here::here(\".vault/\"))\n\n\n  # CHECK jsPsychHelpeR runs OK\n\n  # || THIS WILL take a while, as all the renv packages need to update\n  # Create NEW jsPsychHelpeR project, downloading the files from the server\n  jsPsychHelpeR::run_initial_setup(pid = PROTOCOLID,\n                                   download_files = TRUE,\n                                   folder = \"~/Downloads/jsPsychR_TESTING_for_PRODUCTION\")\n\n    # REMEMBER TO DO targets::tar_make() in jsPsychHelpeR project!\n\n\n  # 2) Clean data and  MySQL DB --------------------------------------------\n\n    # rstudioapi::navigateToFile(\".vault/.credentials\")\n    jsPsychAdmin::clean_up_dev_protocol(protocol_id = pid) # Will ask for server password\n\n\n  # 3) Revisar el config.js para pasar el experiment a produccion ----------\n\n    # -[] online = true\n    # -[] pid OK?\n    # -[] debug_mode = false\n    # - ETC...\n\n\n  # 4) Copiar protocolo ZIPeado a test/protocols_DEV/OLD_TESTS/ -------------\n\n    # TODO: automatico!\n\n  # 5) Copiar protocolo a protocols/ ----------------------------------------\n\n    # TODO: automatico!\n\n  # 6) BORRAR protocolo de test/protocols_DEV/OLD_TESTS/ --------------------\n\n    # TODO: automatico!",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Common Tasks</span>"
    ]
  },
  {
    "objectID": "qmd/10-references.html#jspsychr-implementation",
    "href": "qmd/10-references.html#jspsychr-implementation",
    "title": "References",
    "section": "jsPsychR implementation",
    "text": "jsPsychR implementation\nThe following R packages are used in jsPsychR: Navarrete and Valencia (2023), Navarrete (2023b), Navarrete (2023c), Wickham, Hesselberth, and Salmon (2022), Wickham and Henry (2023), Landau (2021a), Csárdi (2023), Wickham, François, et al. (2023), Xie, Cheng, and Tan (2023), Wickham (2023a), Müller (2020), Firke (2023), Pedersen (2023), William Revelle (2023), Wickham, Hester, and Bryan (2023), Ushey and Wickham (2023), Allaire et al. (2023), Ushey et al. (2023), Wickham (2023c), Müller and Wickham (2023), Wickham, Vaughan, and Girlich (2023), Almende B.V. and Contributors and Thieurmel (2022), Hester (2023), Wickham et al. (2022), Navarrete (2023a), Navarrete (2023b), R Core Team (2023a), Navarrete and Valencia (2023), Csárdi and Chang (2022), Dowle and Srinivasan (2023), Hester and Bryan (2022), Bryan (2023), Warnes et al. (2023), Bache and Wickham (2022), Wickham and Bryan (2023), Henry and Wickham (2023), Waring et al. (2022), R Core Team (2023b), R Core Team (2023c), Ooms (2023b), Wilke (2022), Chang et al. (2023), Xie (2023), Navarrete (2023c), Wickham (2022), Ooms (2023a), Atkins et al. (2023), Cheng et al. (2023), Wickham (2023b), Attali (2021), Perrier, Meyer, and Granjon (2023), Csárdi and Chang (2023), Wickham, Girlich, et al. (2023), Iannone et al. (2023), Xie, Allaire, and Horner (2023), Csárdi (2022b), Harrison (2022), Meyer and Perrier (2023), Csárdi et al. (2023), Izrailev (2023), Csárdi (2022a), Hester, Wickham, and Csárdi (2023), Vaughan and Dancho (2022), Hester et al. (2023), Temple Lang (2023)",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "qmd/10-references.html#tasks-implementation",
    "href": "qmd/10-references.html#tasks-implementation",
    "title": "References",
    "section": "Tasks implementation",
    "text": "Tasks implementation\nThe tasks have been implemented following: Antúnez and Vinet (2012), Bados, Solanas, and Andrés (n.d.), Baron-Cohen and Wheelwright (2004), Bezalel (2020), Boehm and Carter (2019), Bosc, Dubini, and Polin (1997), Bradley and Lang (1994), Breinbauer K et al. (2009), Buchanan et al. (n.d.), Butler and Kern (2016), Cabello et al. (2013), Carreño-Moreno et al. (2022), Cohen, Kamarck, and Mermelstein (1983), Cokely et al. (2012), Davis (n.d.), Daza et al. (2002), delValle et al. (2022), Díaz-Vilela and Álvarez-González (n.d.), Díaz et al. (n.d.), Eckblad and Chapman (n.d.), Everett et al. (2018), Fonseca-Pedrero et al. (n.d.), Galiana et al. (2020), Garcia-Retamero (n.d.), García et al. (2019), Gomez and Fisher (2003), Gross and John (n.d.), Hays and DiMatteo (1987), Hetts et al. (2000), Hildebrandt et al. (2021), Hooker, Roese, and Park (2000), Houran, Thalbourne, and Lange (2003), Huber and Huber (2012), Jong, Bluemke, and Halberstadt (2013), Kanske et al. (2015), Keaton (n.d.), Koenig, Moberg, and Kvale (1988), Lejuez et al. (2002), León, García-García, and Roldán-Tapia (2014), León, García-García, and Roldán-Tapia (2015), León Estrada, García García, and Roldán Tapia (2011), Levenson (n.d.), Lins et al. (n.d.), Lipkus, Samsa, and Rimer (2001), Lovibond and Lovibond (1995), Lyon et al. (2022), Mann et al. (1997), María, Atenas, and Villarroel (n.d.), Mezzadra and Simkin (2017), Moodley, Esterhuyse, and Beukes (2012), Morejón, García-Bóveda, and Jiménez (2004), Pargament et al. (1998), Pérez-Albéniz, de Paúl, and Etxeberría (n.d.), Plante and Boccaccini (1997), Pommier, Neff, and Tóth-Király (2020), Pons (n.d.), Psoteg (n.d.), Reyna (2016), Rojas-Barahona, Zegers P, and Förster M (2009), Ruiz, García-Beltrán, and Suárez-Falcón (2017), Ryff and Keyes (n.d.), Sala et al. (2012), Sánchez-López and Dresch (2008), Silva, de Sampaio Brito, and Pereira (2020), Sirota and Juanchich (2018), Sirota et al. (2020), Ståhl, Zaal, and Skitka (2016), Stamm (n.d.), Stoll et al. (2016), Stone, Baron-Cohen, and Knight (1998), J. J. Tobacyk (n.d.), J. Tobacyk and Milford (n.d.), Toplak, West, and Stanovich (2013), Vale, Balieiro-Jr, and Silva-Filho (2012), Fiona H. Weeks (2019), Fiona H. Weeks, Sadler, and Stoll (2020), Wu and Yao (2008), “Coeficiente de Empatía” (n.d.), “MANUAL PARA LA UTILIZACIÓN DEL CUESTIONARIO” (n.d.)",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "qmd/10-references.html#bibliography",
    "href": "qmd/10-references.html#bibliography",
    "title": "References",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nAllaire, JJ, Yihui Xie, Christophe Dervieux, Jonathan McPherson, Javier\nLuraschi, Kevin Ushey, Aron Atkins, et al. 2023. rmarkdown: Dynamic Documents for r. https://github.com/rstudio/rmarkdown.\n\n\nAlmende B.V. and Contributors, and Benoit Thieurmel. 2022. visNetwork: Network Visualization Using\n“vis.js” Library. https://datastorm-open.github.io/visNetwork/.\n\n\nAntúnez, Zayra, and Eugenia V Vinet. 2012. “Escalas de depresión,\nansiedad y estrés (DASS – 21): Validación de la Versión Abreviada en\nEstudiantes Universitarios Chilenos.” terapia\npsicolÓgica 30: 9. https://doi.org/10.4067/S0718-48082012000300005.\n\n\nAtkins, Aron, Toph Allen, Hadley Wickham, Jonathan McPherson, and JJ\nAllaire. 2023. rsconnect: Deploy Docs,\nApps, and APIs to “Posit Connect,”\n“shinyapps.io,” and\n“RPubs”. https://github.com/rstudio/rsconnect.\n\n\nAttali, Dean. 2021. shinyjs: Easily\nImprove the User Experience of Your Shiny Apps in Seconds. https://deanattali.com/shinyjs/.\n\n\nBache, Stefan Milton, and Hadley Wickham. 2022. magrittr: A Forward-Pipe Operator for r. https://magrittr.tidyverse.org.\n\n\nBados, Arturo, Antonio Solanas, and Raquel Andrés. n.d.\n“Psychometric Properties of the Spanish Version of\nDepression, Anxiety and Stress\nScales (DASS),” 6.\n\n\nBaron-Cohen, Simon, and Sally Wheelwright. 2004. “The\nEmpathy Quotient: An Investigation of\nAdults with Asperger Syndrome or High\nFunctioning Autism, and Normal Sex\nDifferences.” Journal of Autism and Developmental\nDisorders 34 (2): 163–75. https://doi.org/10.1023/B:JADD.0000022607.19833.00.\n\n\nBezalel, Glenn Y. 2020. “‘Moral\nDumbfounding’: Moral Foundations Theory for the\nClassroom.” Theory and Research in Education 18 (2):\n191–210. https://doi.org/10.1177/1477878520934014.\n\n\nBoehm, Thomas L., and Erik W. Carter. 2019. “Facets of\nFaith: Spirituality, Religiosity,\nand Parents of Individuals With Intellectual\nDisability.” Intellectual and Developmental\nDisabilities 57 (6): 512–26. https://doi.org/10.1352/1934-9556-57.6.512.\n\n\nBosc, M., A. Dubini, and V. Polin. 1997. “Development and\nValidation of a Social Functioning Scale, the Social Adaptation Self-evaluation Scale.”\nEuropean Neuropsychopharmacology 7 (1): S57–70. https://doi.org/10.1016/S0924-977X(97)00420-3.\n\n\nBradley, Margaret M., and Peter J. Lang. 1994. “Measuring Emotion:\nThe Self-Assessment Manikin and the Semantic\nDifferential.” Journal of Behavior Therapy and Experimental\nPsychiatry 25 (1): 49–59. https://doi.org/10.1016/0005-7916(94)90063-9.\n\n\nBreinbauer K, Hayo, Hugo Vásquez V, Sebastián Mayanz S, Claudia Guerra,\nand Teresa Millán K. 2009. “Validación en Chile de la Escala de\nSobrecarga del Cuidador de Zarit en sus versiones original y\nabreviada.” Revista médica de Chile 137 (5). https://doi.org/10.4067/S0034-98872009000500009.\n\n\nBryan, Jennifer. 2023. Googlesheets4: Access Google Sheets Using the\nSheets API V4. https://googlesheets4.tidyverse.org.\n\n\nBuchanan, Tom, Thomas M Heffernan, Andrew C Parrott, Jonathan Ling,\nJacqui Rodgers, and Andrew B Scholey. n.d. “A Short Self-Report\nMeasure of Problems with Executive Function Suitable for Administration\nvia the Internet,” 6. https://doi.org/10.3758/BRM.42.3.709.\n\n\nButler, Julie, and Margaret L. Kern. 2016. “The\nPERMA-Profiler: A Brief Multidimensional\nMeasure of Flourishing.” International Journal of\nWellbeing 6 (3): 1–48. https://doi.org/10.5502/ijw.v6i3.526.\n\n\nCabello, Rosario, José M. Salguero, Pablo Fernández-Berrocal, and James\nJ. Gross. 2013. “A Spanish Adaptation of the\nEmotion Regulation Questionnaire.” European\nJournal of Psychological Assessment 29 (4): 234–40. https://doi.org/10.1027/1015-5759/a000150.\n\n\nCarreño-Moreno, Sonia Patricia, Lorena Chaparro-Díaz, Nelly Cáliz\nRomero, and Nathaly Rivera Romero. 2022. “Validez de la escala de\nsoledad UCLA en cuidadores de pacientes crónicos en Colombia.”\nInvestigación en Enfermería: Imagen y Desarrollo, July. https://doi.org/10.11144/Javeriana.ie24.vesu.\n\n\nChang, Winston, Joe Cheng, JJ Allaire, Carson Sievert, Barret Schloerke,\nYihui Xie, Jeff Allen, Jonathan McPherson, Alan Dipert, and Barbara\nBorges. 2023. shiny: Web Application\nFramework for r. https://shiny.posit.co/.\n\n\nCheng, Joe, Carson Sievert, Barret Schloerke, Winston Chang, Yihui Xie,\nand Jeff Allen. 2023. htmltools: Tools\nfor HTML. https://github.com/rstudio/htmltools.\n\n\n“Coeficiente de Empatía.” n.d.\n\n\nCohen, Sheldon, Tom Kamarck, and Robin Mermelstein. 1983. “A\nGlobal Measure of Perceived Stress.”\nJournal of Health and Social Behavior 24 (4): 385–96. https://doi.org/10.2307/2136404.\n\n\nCokely, Edward T, Mirta Galesic, Eric Schulz, Rocio Garcia-Retamero, and\nSaima Ghazal. 2012. “Measuring Risk Literacy:\nThe Berlin Numeracy Test.” Judgment and Decision\nMaking 7 (1): 23.\n\n\nCsárdi, Gábor. 2022a. crayon: Colored\nTerminal Output. https://github.com/r-lib/crayon#readme.\n\n\n———. 2022b. pingr: Check If a Remote\nComputer Is up. https://github.com/r-lib/pingr#readme.\n\n\n———. 2023. cli: Helpers for Developing\nCommand Line Interfaces. https://cli.r-lib.org.\n\n\nCsárdi, Gábor, and Winston Chang. 2022. callr: Call r from r. https://callr.r-lib.org.\n\n\n———. 2023. processx: Execute and Control\nSystem Processes. https://processx.r-lib.org.\n\n\nCsárdi, Gábor, Jim Hester, Hadley Wickham, Winston Chang, Martin Morgan,\nand Dan Tenenbaum. 2023. remotes: R\nPackage Installation from Remote Repositories, Including\n“GitHub”. https://remotes.r-lib.org.\n\n\nDavis, Mark H. n.d. “Measuring Individual Differences\nin Empathy: Evidence for a\nMultidimensional Approach,” 14. https://doi.org/10.1037/0022-3514.44.1.113.\n\n\nDaza, Patricia, Diane M Novy, Melinda A Stanley, and Patricia Averill.\n2002. “The Depression Anxiety Stress Scale-21:\nSpanish Translation and Validation with a\nHispanic Sample.” Journal of Psychopathology and\nBehavioral Assessment, 11. https://doi.org/10.1023/A:1016014818163.\n\n\ndelValle, Macarena V., María Laura Andrés, Sebastián Urquijo, Eliana V.\nZamora, Ashish Mehta, and James J. Gross. 2022. “Argentinean\nAdaptation and Psychometric Properties of the\nEmotion Regulation Questionnaire\n(ERQ).” Psychological Reports 125 (5):\n2733–59. https://doi.org/10.1177/00332941211021343.\n\n\nDíaz, Darío, Raquel Rodríguez-Carvajal, Amalio Blanco, Bernardo\nMoreno-Jiménez, and Ismael Gallardo. n.d. “Adaptación española de\nlas escalas de bienestar psicológico de Ryff.”\n\n\nDíaz-Vilela, Luis, and Carlos J Álvarez-González. n.d.\n“DIFFERENCES IN PARANORMAL BELIEFS ACROSS FIELDS OF STUDY\nFROM A SPANISH ADAPTATION OF TOBACYK’S RPBS.”\nThe Journal of Parapsychology.\n\n\nDowle, Matt, and Arun Srinivasan. 2023. data.table: Extension of “data.frame”. https://r-datatable.com.\n\n\nEckblad, Mark, and Loren J Chapman. n.d. “Magical\nIdeation as an Indicator of\nSchizotypy,” 11. https://doi.org/10.1037/0022-006X.51.2.215.\n\n\nEverett, Jim A. C., Nadira S. Faber, Julian Savulescu, and Molly J.\nCrockett. 2018. “The Costs of Being Consequentialist:\nSocial Inference from Instrumental Harm and Impartial\nBeneficence.” Journal of Experimental Social Psychology\n79 (November): 200–216. https://doi.org/10.1016/j.jesp.2018.07.004.\n\n\nFirke, Sam. 2023. janitor: Simple Tools\nfor Examining and Cleaning Dirty Data. https://github.com/sfirke/janitor.\n\n\nFonseca-Pedrero, Eduardo, Mercedes Paino, Serafín Lemos-Giráldez,\nEduardo García-Cueto, Úrsula Villazón-García, and José Muñiz. n.d.\n“Psychometric Properties of the Perceptual Aberration\nScale and the Magical Ideation Scale in\nSpanish College Students” 9.\n\n\nGaliana, Laura, Amparo Oliver, Fernanda Arena, Gustavo De Simone, José\nM. Tomás, Gabriel Vidal-Blanco, Inmaculada Muñoz-Martínez, and Noemí\nSansó. 2020. “Development and Validation of the Short\nProfessional Quality of Life Scale Based on Versions\nIV and V of the Professional\nQuality of Life Scale.” Health and\nQuality of Life Outcomes 18 (1): 364. https://doi.org/10.1186/s12955-020-01618-3.\n\n\nGarcía, Jorge Acosta, Francisco Checa y Olmos, Manuel Lucas Matheu, and\nTesifón Parrón Carreño. 2019. “Self Esteem Levels Vs Global Scores\non the Rosenberg Self-Esteem Scale.”\nHeliyon 5 (3): e01378. https://doi.org/10.1016/j.heliyon.2019.e01378.\n\n\nGarcia-Retamero, Rocio. n.d. “Habilidades numéricas y salud: una\nrevisión crítica,” 13.\n\n\nGomez, Rapson, and John W Fisher. 2003. “Domains of Spiritual\nWell-Being and Development and Validation of the Spiritual\nWell-Being Questionnaire.” Personality and Individual\nDifferences 35 (8): 1975–91. https://doi.org/10.1016/S0191-8869(03)00045-X.\n\n\nGross, James J, and Oliver P John. n.d. “Individual\nDifferences in Two Emotion Regulation\nProcesses: Implications for Affect,\nRelationships, and Well-Being,” 15. https://doi.org/10.1037/0022-3514.85.2.348.\n\n\nHarrison, John. 2022. RSelenium: R Bindings for\n“Selenium WebDriver”. https://docs.ropensci.org/RSelenium/.\n\n\nHays, Ron, and M. Robin DiMatteo. 1987. “A Short-Form\nMeasure of Loneliness.” Journal of\nPersonality Assessment 51 (1): 69–81. https://doi.org/10.1207/s15327752jpa5101_6.\n\n\nHenry, Lionel, and Hadley Wickham. 2023. rlang: Functions for Base Types and Core r and\n“Tidyverse” Features. https://rlang.r-lib.org.\n\n\nHester, Jim. 2023. covr: Test Coverage\nfor Packages. https://covr.r-lib.org.\n\n\nHester, Jim, and Jennifer Bryan. 2022. glue: Interpreted String Literals. https://github.com/tidyverse/glue.\n\n\nHester, Jim, Lionel Henry, Kirill Müller, Kevin Ushey, Hadley Wickham,\nand Winston Chang. 2023. withr: Run Code\n“With” Temporarily Modified Global State.\nhttps://withr.r-lib.org.\n\n\nHester, Jim, Hadley Wickham, and Gábor Csárdi. 2023. fs: Cross-Platform File System Operations Based on\n“libuv”. https://fs.r-lib.org.\n\n\nHetts, John J., David S. Boninger, David A. Armor, Faith Gleicher, and\nAriel Nathanson. 2000. “The Influence of Anticipated\nCounterfactual Regret on Behavior.” Psychology and\nMarketing 17 (4): 345–68. https://doi.org/10.1002/(SICI)1520-6793(200004)17:4&lt;345::AID-MAR5&gt;3.0.CO;2-M.\n\n\nHildebrandt, Malin K., Emanuel Jauk, Konrad Lehmann, Lara Maliske, and\nPhilipp Kanske. 2021. “Brain Activation During Social Cognition\nPredicts Everyday Perspective-Taking: A Combined fMRI and Ecological Momentary Assessment Study of\nthe Social Brain.” NeuroImage 227 (February): 117624. https://doi.org/10.1016/j.neuroimage.2020.117624.\n\n\nHooker, Christine, Neal J. Roese, and Sohee Park. 2000.\n“Impoverished Counterfactual Thinking Is\nAssociated with Schizophrenia.”\nPsychiatry 63 (4): 326–35. https://doi.org/10.1080/00332747.2000.11024925.\n\n\nHouran, James, Michael A Thalbourne, and Rense Lange. 2003.\n“Methodological Note: Erratum and Comment on the Use\nof the Revised Transliminality Scale.”\nConsciousness and Cognition 12 (1): 140–44. https://doi.org/10.1016/S1053-8100(02)00025-9.\n\n\nHuber, Stefan, and Odilo W Huber. 2012. “The\nCentrality of Religiosity Scale\n(CRS),” 15. https://doi.org/10.3390/rel3030710.\n\n\nIannone, Richard, Joe Cheng, Barret Schloerke, Ellis Hughes, Alexandra\nLauer, and JooYoung Seo. 2023. gt:\nEasily Create Presentation-Ready Display Tables. https://gt.rstudio.com.\n\n\nIzrailev, Sergei. 2023. tictoc:\nFunctions for Timing r Scripts, as Well as Implementations of\n“Stack” and\n“StackList” Structures. https://github.com/jabiru/tictoc.\n\n\nJong, Jonathan, Matthias Bluemke, and Jamin Halberstadt. 2013.\n“Fear of Death and Supernatural Beliefs:\nDeveloping A New Supernatural Belief Scale to\nTest the Relationship.” European\nJournal of Personality 27 (5): 495–506. https://doi.org/10.1002/per.1898.\n\n\nKanske, Philipp, Anne Böckler, Fynn-Mathis Trautwein, and Tania Singer.\n2015. “Dissecting the Social Brain: Introducing the\nEmpaToM to Reveal Distinct Neural Networks and\nBrain–Behavior Relations for Empathy and Theory of\nMind.” NeuroImage 122 (November): 6–19. https://doi.org/10.1016/j.neuroimage.2015.07.082.\n\n\nKeaton, Shaughan A. n.d. “Profile 53\nRational‐Experiential Inventory–40\n(REI‐40),” 8.\n\n\nKoenig, Harold G., David O. Moberg, and James N. Kvale. 1988.\n“Religious Activities and Attitudes of\nOlder Adults in a Geriatric Assessment\nClinic.” Journal of the American Geriatrics\nSociety 36 (4): 362–74. https://doi.org/10.1111/j.1532-5415.1988.tb02365.x.\n\n\nLandau, William Michael. 2021a. tarchetypes: Archetypes for Targets.\n\n\n———. 2021b. “The Targets r Package: A Dynamic Make-Like\nFunction-Oriented Pipeline Toolkit for Reproducibility and\nHigh-Performance Computing.” Journal of Open Source\nSoftware 6 (57): 2959. https://doi.org/10.21105/joss.02959.\n\n\nLeeuw, Joshua R. de. 2015. “jsPsych:\nA JavaScript Library for Creating Behavioral Experiments in\na Web Browser.” Behavior Research Methods\n47 (1): 1–12. https://doi.org/10.3758/s13428-014-0458-y.\n\n\nLejuez, C. W., Jennifer P. Read, Christopher W. Kahler, Jerry B.\nRichards, Susan E. Ramsey, Gregory L. Stuart, David R. Strong, and\nRichard A. Brown. 2002. “Evaluation of a Behavioral Measure of\nRisk Taking: The Balloon Analogue Risk Task\n(BART).” Journal of Experimental Psychology:\nApplied 8 (2): 75–84. https://doi.org/10.1037/1076-898X.8.2.75.\n\n\nLeón Estrada, Irene, Juan García García, and Lola Roldán Tapia. 2011.\n“Construcción de la escala de reserva cognitiva en población\nespañola: estudio piloto.” Revista de Neurología 52\n(11): 653. https://doi.org/10.33588/rn.5211.2010704.\n\n\nLeón, Irene, Juan García-García, and Lola Roldán-Tapia. 2014.\n“Estimating Cognitive Reserve in Healthy Adults\nUsing the Cognitive Reserve Scale.” Edited by\nSonia Brucki. PLoS ONE 9 (7): e102632. https://doi.org/10.1371/journal.pone.0102632.\n\n\n———. 2015. “Escala de Reserva Cognitiva y\nEnvejecimiento.” Anales de Psicología 32 (1): 218. https://doi.org/10.6018/analesps.32.1.182331.\n\n\nLevenson, Hanna. n.d. “Activism and Powerful Others:\nDistinctions Within the Concept of\nInternal-External Control,” 9. https://doi.org/10.1080/00223891.1974.10119988.\n\n\nLindsay, D. Stephen. 2023. “A Plea to\nPsychology Professional Societies That Publish\nJournals: Assess Computational\nReproducibility.” Meta-Psychology 7 (September).\nhttps://doi.org/10.15626/MP.2023.4020.\n\n\nLins, Samuel, Ezra Bottequin, Ádám Dóka, Agata Golasa, Frida Hylander,\nAna Merchán, Ana Odabaši, and Sara Pavlovi. n.d. “To\nThink, to Feel, to Have:\nThe Effects of Need for\nCognition, Hedonism and\nMaterialism on Impulse Buying Tendencies in\nAdolescents.” https://doi.org/10.5334/jeps.bh.\n\n\nLipkus, Isaac M., Greg Samsa, and Barbara K. Rimer. 2001. “General\nPerformance on a Numeracy Scale Among\nHighly Educated Samples.” Medical Decision\nMaking 21 (1): 37–44. https://doi.org/10.1177/0272989X0102100105.\n\n\nLovibond, P. F., and S. H. Lovibond. 1995. “The Structure of\nNegative Emotional States: Comparison of the\nDepression Anxiety Stress Scales (DASS) with\nthe Beck Depression and Anxiety\nInventories.” Behaviour Research and Therapy 33\n(3): 335–43. https://doi.org/10.1016/0005-7967(94)00075-U.\n\n\nLyon, Aaron R., Catherine M. Corbin, Eric C. Brown, Mark G. Ehrhart,\nJill Locke, Chayna Davis, Elissa Picozzi, Gregory A. Aarons, and Clayton\nR. Cook. 2022. “Leading the Charge in the Education Sector:\nDevelopment and Validation of the School Implementation Leadership\nScale (SILS).” Implementation\nScience 17 (1): 48. https://doi.org/10.1186/s13012-022-01222-7.\n\n\nMann, Leon, Paul Burnett, Mark Radford, and Steve Ford. 1997. “The\nMelbourne Decision Making Questionnaire: An Instrument for\nMeasuring Patterns for Coping with Decisional Conflict.”\nJournal of Behavioral Decision Making 10 (1): 1–19. https://doi.org/10.1002/(SICI)1099-0771(199703)10:1&lt;1::AID-BDM242&gt;3.0.CO;2-X.\n\n\n“MANUAL PARA LA UTILIZACIÓN DEL CUESTIONARIO.” n.d.\n\n\nMaría, Ana, Celis Atenas, and Vera Villarroel. n.d. “Propiedades\npsicométricas de la Escala de Autoestima de Rosenberg en universitarios\nchilenos.”\n\n\nMeyer, Fanny, and Victor Perrier. 2023. shinybusy: Busy Indicators and Notifications for\n“Shiny” Applications. https://github.com/dreamRs/shinybusy.\n\n\nMezzadra, Joaquín, and Hugo Simkin. 2017. “Validación de la Escala\nAbreviada de Afrontamiento Religioso Brief-RCOPE en el Contexto\nArgentino en estudiantes de confesión católica,” 11. https://doi.org/10.35670/1667-4545.v17.n1.17071.\n\n\nMoodley, Trevor, Karel G. F. Esterhuyse, and Roelf B. I. Beukes. 2012.\n“Factor Analysis of the Spiritual Well-being Questionnaire Using a\nSample of South African Adolescents.”\nReligion & Theology 19 (1-2): 122–51. https://doi.org/10.1163/157430112X650339.\n\n\nMorejón, Antonio J VÁZQUEZ, Rosa JIMÉNEZ García-Bóveda, and Raquel\nVÁZQUEZ-MOREJÓN Jiménez. 2004. “Escala de autoestima de Rosenberg:\nfiabilidad y validez en población clínica española” 22.\n\n\nMüller, Kirill. 2020. here: A Simpler\nWay to Find Your Files. https://here.r-lib.org/.\n\n\nMüller, Kirill, and Hadley Wickham. 2023. tibble: Simple Data Frames. https://tibble.tidyverse.org/.\n\n\nNavarrete, Gorka. 2023a. jsPsychAdmin:\nAdmin Tasks for jsPsychR Packages. https://github.com/gorkang/jsPsychAdmin.\n\n\n———. 2023b. jsPsychHelpeR: Standardize\nand Automatize Data Preparation and Analysis of jsPsych Experiments\nCreated with jsPsychMaker. https://github.com/gorkang/jsPsychHelpeR.\n\n\n———. 2023c. jsPsychMonkeys: Release\nMonkeys to a jsPsych Experiment Using the r Package targets, Docker and RSelenium.\nhttps://github.com/gorkang/jsPsychMonkeys.\n\n\nNavarrete, Gorka, and Herman Valencia. 2023. jsPsychMaker: Create Behavioral Experiments and\nSurveys Using jsPsych and r. https://github.com/gorkang/jsPsychMaker.\n\n\nObels, Pepijn, Daniël Lakens, Nicholas A Coles, Jaroslav Gottfried, and\nSeth A Green. 2020. “Analysis of Open Data and\nComputational Reproducibility in Registered\nReports in Psychology.” Advances in\nMethods and Practices in Psychological Science 3 (2). https://doi.org/10.1177/2515245920918872.\n\n\nOoms, Jeroen. 2023a. V8: Embedded JavaScript and WebAssembly Engine\nfor r. https://jeroen.r-universe.dev/V8.\n\n\n———. 2023b. writexl: Export Data Frames\nto Excel “xlsx” Format. https://docs.ropensci.org/writexl/\n(website) https://github.com/ropensci/writexl (devel)\nhttps://libxlsxwriter.github.io (upstream).\n\n\nPargament, Kenneth I., Bruce W. Smith, Harold G. Koenig, and Lisa Perez.\n1998. “Patterns of Positive and Negative\nReligious Coping with Major Life Stressors.”\nJournal for the Scientific Study of Religion 37 (4): 710–24. https://doi.org/10.2307/1388152.\n\n\nPedersen, Thomas Lin. 2023. patchwork:\nThe Composer of Plots. https://patchwork.data-imaginist.com.\n\n\nPérez-Albéniz, Alicia, Joaquín de Paúl, and Juan Etxeberría. n.d.\n“Adaptación de Interpersonal Reactivity Index (IRI) al\nespañol.”\n\n\nPerrier, Victor, Fanny Meyer, and David Granjon. 2023. shinyWidgets: Custom Inputs Widgets for\nShiny. https://github.com/dreamRs/shinyWidgets.\n\n\nPlante, Thomas G., and Marcus T. Boccaccini. 1997. “The\nSanta Clara Strength of Religious Faith\nQuestionnaire.” Pastoral Psychology 45 (5):\n375–87. https://doi.org/10.1007/BF02230993.\n\n\nPommier, Elizabeth, Kristin D. Neff, and István Tóth-Király. 2020.\n“The Development and Validation of the\nCompassion Scale.” Assessment 27 (1):\n21–39. https://doi.org/10.1177/1073191119874108.\n\n\nPons, Gonzalo Brito. n.d. “CULTIVATING HEALTHY MINDS AND\nOPEN HEARTS: A MIXED-METHOD CONTROLLED STUDY ON THE\nPSYCHOLOGICAL AND RELATIONAL EFFECTS OF COMPASSION CULTIVATION TRAINING\nIN CHILE.”\n\n\nPsoteg, Coden. n.d. “Decision-Making Patterns, Conflict Sytles,\nand Self-Esteem.”\n\n\nR Core Team. 2023c. R: A Language and Environment for\nStatistical Computing. Vienna, Austria: R Foundation for\nStatistical Computing. https://www.R-project.org/.\n\n\n———. 2023a. R: A Language and Environment for\nStatistical Computing. Vienna, Austria: R Foundation for\nStatistical Computing. https://www.R-project.org/.\n\n\n———. 2023b. R: A Language and Environment for\nStatistical Computing. Vienna, Austria: R Foundation for\nStatistical Computing. https://www.R-project.org/.\n\n\nReyna, Cecilia. 2016. “Psychometric Study of the Rational\nExperiential Inventory Among Undergraduate\nArgentinean Students.” Revista de\nPsicología 34: 19. https://doi.org/10.18800/psico.201602.005.\n\n\nRojas-Barahona, Cristian A, Beatriz Zegers P, and Carla E Förster M.\n2009. “La escala de autoestima de Rosenberg: Validación para Chile\nen una muestra de jóvenes adultos, adultos y adultos mayores.”\nRevista médica de Chile 137 (6). https://doi.org/10.4067/S0034-98872009000600009.\n\n\nRuiz, Francisco J., Diana M. García-Beltrán, and Juan C. Suárez-Falcón.\n2017. “General Health Questionnaire-12 Validity in\nColombia and Factorial Equivalence Between Clinical and\nNonclinical Participants.” Psychiatry Research 256\n(October): 53–58. https://doi.org/10.1016/j.psychres.2017.06.020.\n\n\nRyff, Carol D, and Corey Lee M Keyes. n.d. “The\nStructure of Psychological Well-Being\nRevisited.” https://doi.org/10.1037/0022-3514.69.4.719.\n\n\nSala, Maria Nives, Paola Molina, Birgit Abler, Henrik Kessler, Leonard\nVanbrabant, and Rens Van De Schoot. 2012. “Measurement Invariance\nof the Emotion Regulation Questionnaire (ERQ).\nA Cross-National Validity Study.” European\nJournal of Developmental Psychology 9 (6): 751–57. https://doi.org/10.1080/17405629.2012.690604.\n\n\nSánchez-López, María del Pilar, and Virginia Dresch. 2008. “The\n12-Item General Health Questionnaire (GHQ-12):\nReliability, External Validity and Factor Structure in the\nSpanish Population.” Psicothema 20 (4):\n839–43.\n\n\nSilva, Washington Allysson Dantas, Tátila Rayane de Sampaio Brito, and\nCicero Roberto Pereira. 2020. “COVID-19 Anxiety Scale\n(CAS): Development and Psychometric\nProperties.” Current Psychology, November. https://doi.org/10.1007/s12144-020-01195-0.\n\n\nSirota, Miroslav, Chris Dewberry, Marie Juanchich, Lenka Valuš, and\nAmanda C. Marshall. 2020. “Measuring Cognitive Reflection Without\nMaths: Development and Validation of the Verbal Cognitive\nReflection Test.” Journal of Behavioral Decision Making,\nOctober. https://doi.org/10.1002/bdm.2213.\n\n\nSirota, Miroslav, and Marie Juanchich. 2018. “Effect of Response\nFormat on Cognitive Reflection: Validating a Two- and\nFour-Option Multiple Choice Question Version of the Cognitive\nReflection Test.” Behavior Research Methods 50\n(6): 2511–22. https://doi.org/10.3758/s13428-018-1029-4.\n\n\nStåhl, Tomas, Maarten P. Zaal, and Linda J. Skitka. 2016.\n“Moralized Rationality: Relying on\nLogic and Evidence in the\nFormation and Evaluation of Belief Can\nBe Seen as a Moral Issue.” Edited by Brock\nBastian. PLOS ONE 11 (11): e0166332. https://doi.org/10.1371/journal.pone.0166332.\n\n\nStamm, B Hudnall. n.d. “Self-scoring directions Research\nInformation on the ProQOL – CSF-vIV: Professional Quality of Life:\nCompassion Satisfaction and Fatigue Subscales.”\n\n\nStoll, Kathrin, Yvonne Hauck, Soo Downe, Joyce Edmonds, Mechthild M.\nGross, Anne Malott, Patricia McNiven, Emma Swift, Gillian Thomson, and\nWendy A. Hall. 2016. “Cross-Cultural Development and Psychometric\nEvaluation of a Measure to Assess Fear of Childbirth Prior to\nPregnancy.” Sexual & Reproductive Healthcare 8\n(June): 49–54. https://doi.org/10.1016/j.srhc.2016.02.004.\n\n\nStone, Valerie E., Simon Baron-Cohen, and Robert T. Knight. 1998.\n“Frontal Lobe Contributions to Theory of\nMind.” Journal of Cognitive Neuroscience 10\n(5): 640–56. https://doi.org/10.1162/089892998562942.\n\n\nTemple Lang, Duncan. 2023. XML: Tools for Parsing and\nGenerating XML Within r and s-Plus. https://www.omegahat.net/RSXML/.\n\n\nTobacyk, Jerome J. n.d. “A Revised Paranormal Belief\nScale,” 6.\n\n\nTobacyk, Jerome, and Gary Milford. n.d. “Belief in\nParanormal Phenomena: Assessment Instrument\nDevelopment and Implications for Personality\nFunctioning.” https://doi.org/10.1037/0022-3514.44.5.1029.\n\n\nToplak, Maggie E., Richard F. West, and Keith E. Stanovich. 2013.\n“Assessing Miserly Information Processing: An\nExpansion of the Cognitive Reflection Test.”\nThinking & Reasoning 20 (2): 147–68. https://doi.org/10.1080/13546783.2013.844729.\n\n\nUshey, Kevin, JJ Allaire, Hadley Wickham, and Gary Ritchie. 2023.\nrstudioapi: Safely Access the RStudio\nAPI. https://rstudio.github.io/rstudioapi/.\n\n\nUshey, Kevin, and Hadley Wickham. 2023. renv: Project Environments. https://rstudio.github.io/renv/.\n\n\nVale, Francisco A. C., Ari P. Balieiro-Jr, and José Humberto\nSilva-Filho. 2012. “Memory Complaint Scale (MCS):\nProposed Tool for Active Systematic Search.”\nDementia & Neuropsychologia 6 (4): 212–18. https://doi.org/10.1590/S1980-57642012DN06040004.\n\n\nVaughan, Davis, and Matt Dancho. 2022. furrr: Apply Mapping Functions in Parallel Using\nFutures. https://github.com/DavisVaughan/furrr.\n\n\nWaring, Elin, Michael Quinn, Amelia McNamara, Eduardo Arino de la Rubia,\nHao Zhu, and Shannon Ellis. 2022. skimr:\nCompact and Flexible Summaries of Data. https://docs.ropensci.org/skimr/\n(website).\n\n\nWarnes, Gregory R., Ben Bolker, Thomas Lumley, Arni Magnusson, Bill\nVenables, Genei Ryodan, and Steffen Moeller. 2023. gtools: Various r Programming Tools. https://github.com/r-gregmisc/gtools.\n\n\nWeeks, Fiona H. 2019. “Preference for Caesarean Attitudes Toward\nBirth in a Chilean Sample of Young Adults,” 7.\n\n\nWeeks, Fiona H., Michelle Sadler, and Kathrin Stoll. 2020.\n“Preference for Caesarean and Attitudes Toward Birth in a\nChilean Sample of Young Adults.” Women and\nBirth 33 (2): e159–65. https://doi.org/10.1016/j.wombi.2019.03.012.\n\n\nWickham, Hadley. 2022. rvest: Easily\nHarvest (Scrape) Web Pages. https://rvest.tidyverse.org/.\n\n\n———. 2023a. forcats: Tools for Working\nwith Categorical Variables (Factors). https://forcats.tidyverse.org/.\n\n\n———. 2023b. httr: Tools for Working with\nURLs and HTTP. https://httr.r-lib.org/.\n\n\n———. 2023c. stringr: Simple, Consistent\nWrappers for Common String Operations. https://stringr.tidyverse.org.\n\n\nWickham, Hadley, and Jennifer Bryan. 2023. readxl: Read Excel Files. https://readxl.tidyverse.org.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis\nVaughan. 2023. dplyr: A Grammar of Data\nManipulation. https://dplyr.tidyverse.org.\n\n\nWickham, Hadley, Maximilian Girlich, Mark Fairbanks, and Ryan Dickerson.\n2023. dtplyr: Data Table Back-End for\n“dplyr”. https://dtplyr.tidyverse.org.\n\n\nWickham, Hadley, and Lionel Henry. 2023. purrr: Functional Programming Tools. https://purrr.tidyverse.org/.\n\n\nWickham, Hadley, Jay Hesselberth, and Maëlle Salmon. 2022. pkgdown: Make Static HTML Documentation for a\nPackage. https://pkgdown.r-lib.org.\n\n\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2023. readr: Read Rectangular Text Data. https://readr.tidyverse.org.\n\n\nWickham, Hadley, Jim Hester, Winston Chang, and Jennifer Bryan. 2022.\ndevtools: Tools to Make Developing r\nPackages Easier. https://devtools.r-lib.org/.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2023. tidyr: Tidy Messy Data. https://tidyr.tidyverse.org.\n\n\nWilke, Claus O. 2022. ggridges:\nRidgeline Plots in “ggplot2”. https://wilkelab.org/ggridges/.\n\n\nWilliam Revelle. 2023. psych: Procedures\nfor Psychological, Psychometric, and Personality Research.\nEvanston, Illinois: Northwestern University. https://CRAN.R-project.org/package=psych.\n\n\nWu, Chia-huei, and Grace Yao. 2008. “Psychometric Analysis of the\nShort-Form UCLA Loneliness Scale (ULS-8) in\nTaiwanese Undergraduate Students.” Personality\nand Individual Differences 44 (8): 1762–71. https://doi.org/10.1016/j.paid.2008.02.003.\n\n\nXie, Yihui. 2023. knitr: A\nGeneral-Purpose Package for Dynamic Report Generation in r. https://yihui.org/knitr/.\n\n\nXie, Yihui, JJ Allaire, and Jeffrey Horner. 2023. markdown: Render Markdown with “commonmark”. https://github.com/rstudio/markdown.\n\n\nXie, Yihui, Joe Cheng, and Xianying Tan. 2023. DT: A\nWrapper of the JavaScript Library\n“DataTables”. https://github.com/rstudio/DT.",
    "crumbs": [
      "References"
    ]
  }
]