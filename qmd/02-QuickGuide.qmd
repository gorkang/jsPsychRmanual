# Quick Guide {#QuickGuide}

## jsPsychMaker: Create an experimental protocol {#QuickGuidejsPsychMaker}

------------------------------------------------------------------------

**See the [jsPsychMaker chapter](#jsPsychMaker) for more detailed instructions.**

------------------------------------------------------------------------

**Outline**

1)  Download jsPsychMaker

2)  Go to the folder `canonical_protocols` and edit the `config.js` file to select the tasks you need

3)  Open `index.html` in your browser

------------------------------------------------------------------------

#### 1) Download jsPsychMaker {.unnumbered}

Open RStudio and run the following two lines in the console. This will download the last stable jsPsychMaker version `v0.2.0`. When you finish, a new RStudio project named jsPsychMaker-0.0.2 will open.

```{r, eval=FALSE}

# Make sure you have {usethis} installed
if (!require('usethis')) install.packages('usethis'); library('usethis')

# Download the last version:
usethis::use_course(url = "gorkang/jsPsychMaker", destdir = "~/Downloads/")

```

#### 2) Edit configuration {.unnumbered}

You will need to edit the config.js file on the `canonical_protocols`. See the [experiment configuration section](#experiment-configuration) for more details.  

```{r}
#| echo: false
#| out.width: '40%'
# column: margin

  knitr::include_graphics(here::here("img/jsPsychmaker_config.png"))
```

You can do one of the following:  

A) Go to folder `canonical_protocols` and edit `config.js`. 

B) Use the [jsPsychMaker_config Shiny APP](https://gorkang.shinyapps.io/jsPsychMaker_config/) and copy the generated config.js file in the `canonical_protocols` folder.  


#### 3) Run experiment {.unnumbered}

The experiment is ready to run on your computer. Open `index.html` in Google Chrome or your favorite (and up to date) browser.



## jsPsychMonkeys: Simulate participants {#QuickGuidejsPsychMonkeys}

------------------------------------------------------------------------

**See the [jsPsychMonkeys chapter](#jsPsychMonkeys) for more detailed instructions.**

------------------------------------------------------------------------

jsPsychMonkeys uses [Selenium](https://www.selenium.dev/) inside a [Docker](https://www.docker.com/) container to guarantee each session is a clean session. On Linux it's use and configuration is trivial, but on Windows it can be trickier.

------------------------------------------------------------------------

**Outline**

1)  Download jsPsychMonkeys

2)  Setup

3)  Run Monkeys

------------------------------------------------------------------------

#### 1) Download jsPsychMonkeys {.unnumbered}

```{r, eval=FALSE}

if (!require('usethis')) install.packages('usethis'); library('usethis')

usethis::use_course(url = "gorkang/jsPsychMonkeys", destdir = "~/Downloads/")

```

#### 2) Setup {.unnumbered}

Run setup: `source("setup.R")`. This will install the packages needed.

**Ubuntu**

You may need to install some system libraries first:

-   `sudo apt install libssl-dev libcurl4-openssl-dev libxml2-dev docker`


#### 3) Run Monkeys {.unnumbered}

Open `run.R` and follow the instructions. Mainly:

-   Open `_targets.R` file: `rstudioapi::navigateToFile("_targets.R")`

-   Edit `parameters_monkeys_minimal`. For example, launch participants 1 to 5 to the 999 protocol locally:

    -   `parameters_monkeys_minimal = list(uid = 1:5, local_folder_tasks = "Downloads/999")`

-   Run Monkeys!: `targets::tar_make()`



## jsPsychHelpeR: Prepare data {#QuickGuidejsPsychHelpeR}

------------------------------------------------------------------------

**See the [jsPsychHelpeR chapter](#jsPsychHelpeR) for more detailed instructions.**

------------------------------------------------------------------------

**Outline**

1)  Download jsPsychHelpeR

2)  Run setup

3)  Run data preparation

------------------------------------------------------------------------

#### 1) Download jsPsychHelpeR {.unnumbered}

-   Run the following two lines in a RStudio console. A new RStudio session will appear. On the top right corner of your RStudio you should see something similar to:\
    ![](../img/jsPsychHelpeR_project.png){width="40%"}

```{r, eval=FALSE}

# Make sure you have {usethis} installed
if (!require('usethis')) install.packages('usethis'); library('usethis')

# Download jsPsychHelpeR version to the Downloads folder
usethis::use_course(url = "gorkang/jsPsychHelpeR", destdir = "~/Downloads/")

```

#### 2) Run setup {.unnumbered}

Open the file `run.R` and run initial setup:

```{r}
#| echo: false
#| out.width: '40%'
# column: margin
  knitr::include_graphics(here::here("img/files-pane_run.png"))
```

```{r, eval=FALSE}

# Load functions
invisible(lapply(list.files("./R", full.names = TRUE, pattern = ".R$"), source))

# Run initial setup [REMEMBER to replace `999` with your project number]
run_initial_setup(pid = 999)

```

`run_initial_setup()` will:

-   Delete old files\
-   Install dependencies\
-   Create necessary folders\
-   Download results files for the project (you will need the FTP credentials)\
-   Download and zip a copy of the full protocol without the data (you will need the FTP credentials)\
-   Create a `_targets.R` file for your project

**IMPORTANT**: You may need to manually copy the results files to the folder `data/PROJECT ID`


#### 3) Run data preparation {.unnumbered}

```{r, eval=FALSE}

# Run data preparation
targets::tar_make()

```

If you are curious, running `targets::tar_visnetwork(targets_only = TRUE)` will show the whole data preparation targets tree.

------------------------------------------------------------------------
