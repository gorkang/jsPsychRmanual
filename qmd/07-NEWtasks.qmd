---
output: html_document
editor_options: 
  chunk_output_type: console
---
# New protocols and tasks

There are a number of elements the tasks need to work well with jsPsychR, so we recommend to use one of the systems we have developed.  

For example, with `jsPsychMaker::create_protocol()`, you can use tasks we already developed, and/or create new tasks defining their parameters in csv/excel files. The tasks will be part of a fully working protocol. You will need R 4.2 or higher to use it.    

---  

**`create_protocol()` can**:

- Loop through the subfolders in `tasks_folder` to create one task per subfolder  
- Copy `canonical_protocol_clean` to `folder_output`
- Include in the protocol any tasks in `add_canonical_tasks`  
- Modify `config.js` to add all the tasks created and selected  
- Modify `index.html` to add only the plugins those tasks will use  
- Modify `index.html` to add the media those task will use  
- Check task names are OK (no spaces, _, -, do not start by a number, ...)  
- Check only one csv or xls/xlsx file per folder  
- Check plugins used exist in jsPsych-6/plugins  

---  


**`create_protocol()` cannot yet**: 

- Modify config.js to adapt `all_conditions` to the experimental tasks added  
- Use shiny app to edit the local config.js
- Warn about CORS when protocol is local and we have videos


---  



## New protocols {#Newprotocols}

You can create a new protocol in seconds, choosing from the tasks we have already available.  

Make sure you have the last version of jsPsychMaker, installing from Github:  

```{r, eval=FALSE}

if (!require('remotes')) install.packages('remotes'); library('remotes')
remotes::install_github("gorkang/jsPsychMaker")

```



### List available tasks


You can list available tasks to choose from. You have more details in the section [available-tasks](03-jsPsychMaker.html#available-tasks).   

```{r, eval=TRUE}

  jsPsychMaker::list_available_tasks()

```

### Create a protocol

This will create a fully working protocol in `folder_output`. You can edit `config.js` to adapt the protocol to your needs. See [experiment configuration](03-jsPsychMaker.html#experiment-configuration) for more details.  

```{r, eval=FALSE}

  jsPsychMaker::create_protocol(add_canonical_tasks = c("AIM", "EAR", "IRI"),
                                folder_output = "~/Downloads/TEST/new_protocol", 
                                launch_browser = TRUE)

```



## New tasks {#Newtasks}

### Create tasks

You can create new tasks with `create_task()` using `csv` or `xls/xlxs` files for the items, and `html` files for the instructions. But we recommend you use `create_protocol()` instead, so the tasks will be part of a fully working protocol, and testing them will be a breeze.  

There are some things to take into account:   

- The **tasks_folder** expects a folder with sub-folders with the ShortName of tasks. Inside, they need to have one `csv` or `xls/xlxs` file and `html` files  

- The **csv or xls/xlsx file** (ShortName.csv or Shortname.xls/xlsx) needs to have an `ID` and `plugin` columns, and then columns by the name of parameters used in the plugin (e.g. if using the `survey-text` plugin, you will need the `prompt` parameter). If you need **help with the plugins parametes**, see [the jsPsych 6.3 list of plugins](https://www.jspsych.org/6.3/plugins/list-of-plugins/)    

- For each **html file** (ShortName_instructions.html, ShortName_instructions2.html, etc) an instructions page will be created. The files need to end with `_instructions.html` or `instructions#.html` (# is a number). If there is no html, a default page will be used  

- For **key questions** (e.g. present this question only if participants responded "3"), you need to create a column named `if_question` and include a logical condition. For example:

  + `1 != 25`: Response to item 1 is NOT 25
  + `3 == 20`: Response to item 3 is 20
  + `15 == yes`: Response to item 3 is yes

- If you use tasks with images, video or audio, make sure to include the files in a `media/` folder:  

  + Images: `media/img`   
  + Videos: `media/vid`  
  + Audio: `media/audio`  

---  

You can run the fully reproducible example included in jsPsychMaker. It uses the files from `admin/example_tasks_new_protocol/`.  


1) Install jsPsychMaker from Github and load library   

```{r, eval=FALSE}

if (!require('remotes')) install.packages('remotes'); library('remotes')
if (!require('jsPsychMaker')) remotes::install_github("gorkang/jsPsychMaker"); library('jsPsychMaker')

```


2) Copy example tasks

This will copy a few example tasks that you use to adapt your tasks. For example, `MultiChoice` and `Slider` tasks, a key questions mini-task (`IfQuestion`), and an `ImageButtonResponse` task.  


```{r, eval=FALSE}

  copy_example_tasks(destination_folder = "~/Downloads/TEST")

```

3) Create your protocol  

```{r, eval=FALSE}
  
  # Create protocol
  create_protocol(tasks_folder = "~/Downloads/TEST/example_tasks/", 
                  folder_output = "~/Downloads/TEST/new_protocol", 
                  launch_browser = TRUE)

```



## HELP with new tasks {#HelpNewtasks}

If you need help developing new tasks, you can [open a new Issue in the jsPsychMaker Github](https://github.com/gorkang/jsPsychMaker/issues).

We will ask you to add the details about the task in the [NEW tasks document](https://docs.google.com/spreadsheets/d/1LAsyTZ2ZRP_xLiUBkqmawwnKWgy8OCwq4mmWrrc_rpQ/edit#gid=0).

Once the task is implemented, our goal is to always end up having a sister task preparation script in [jsPsychHelpeR](https://github.com/gorkang/jsPsychHelpeR). You can try [to create the preparation script](#create-new-tasks) and do a Pull request, or ask for help [opening a new Issue in the jsPsychHelpeR Github](https://github.com/gorkang/jsPsychHelpeR/issues).


### How to fill the NEW tasks document

---  

[NEW tasks document](https://docs.google.com/spreadsheets/d/1LAsyTZ2ZRP_xLiUBkqmawwnKWgy8OCwq4mmWrrc_rpQ/edit#gid=0)  

---  

First of all, you will need the original paper where the task was validated/translated to have all the details at hand. Please, send us a link to the paper.  

The best way to fill the [NEW tasks document](https://docs.google.com/spreadsheets/d/1LAsyTZ2ZRP_xLiUBkqmawwnKWgy8OCwq4mmWrrc_rpQ/edit#gid=0) is:  

1. Find a task similar to yours in the document [Tareas jsPsychR](https://docs.google.com/spreadsheets/d/1Eo0F4GcmqWZ1cghTpQlA4aHsc8kTABss-HAeimE2IqA/edit#gid=0) where we have information about all the available tasks.  

2. Copy/paste the information from all the tabs to the [NEW tasks document](https://docs.google.com/spreadsheets/d/1LAsyTZ2ZRP_xLiUBkqmawwnKWgy8OCwq4mmWrrc_rpQ/edit#gid=0) and adapt it.  



Try to be as consistent as possible. For example, when entering the information about numeric conversion in the Puntajes_items tab:

    All the cells must be:  
    1 = Mucho  
    2 = Poco  
    ...

DO NOT do things like:

    1: Mucho  
    1 Mucho  
    1 pto = Mucho  
    Mucho 1  

Please, make sure you fill out all the details in all the tabs.
